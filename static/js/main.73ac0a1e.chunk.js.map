{"version":3,"sources":["Firebase/Firebase.js","Components/ContextComponent.js","Components/ListNews.js","Components/SnackBar/SnackBarComponent.js","Components/AskQuestion/AskMeAQuestionComponent.js","Components/HomePageComponent.js","Components/FreshiesMainComponents/FreshiesMainComponents.js","Components/Classified/ClassifiedHomePageComponent.js","Components/Login And Logout/Login.js","Components/Login And Logout/SignUp.js","Components/Login And Logout/ButtonWithLogoutFunctionComponent.js","Components/HeaderComponent.js","Components/Classified/MarkSoldDeleteEditOptionsComponent.js","Components/Classified/ClassifiedProductView.js","Components/Footer/FooterComponent.js","Components/AskQuestion/AnswerComponent.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","auth","GoogleAuthProvider","microSoftAuthProvider","OAuthProvider","analytics","userContext","createContext","HomePageComponentsToSync","useStyles","makeStyles","root","maxWidth","media","height","ListNews","classes","useState","undefined","questionAndAnswerFromFB","setquestionAndAnswerFromFB","useContext","stateForHomePageTwoNestedCompToSync","setStateForHomePageTwoNestedCompToSync","useEffect","collection","orderBy","get","then","snapshot","docs","map","doc","id","key","data","catch","error","console","log","Grid","container","spacing","item","xs","sm","md","lg","to","className","Card","CardActionArea","CardContent","question","length","slice","CardActions","Button","size","color","Math","random","Skeleton","variant","width","SnackBarComponent","open","React","setOpenSnackbar","handleCloseSnackbar","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","IconButton","aria-label","onClick","fontSize","theme","display","flexWrap","margin","AskMeAQuestionComponent","noDoubleSUbmitCLick","setnoDoubleSUbmitCLick","answer","questionAnswerFromFB","setquestionAnswerFromFB","stateAfterQuestionSubmit","setstateAfterQuestionSubmit","setOpen","handleClose","setquestion","useSnackBarState","setUseSnackBarState","user","setUser","onAuthStateChanged","userState","Paper","square","paper","Typography","text","List","list","query","ListItem","button","ListItemAvatar","Avatar","alt","src","answered","ListItemText","primary","secondary","Fab","e","Dialog","aria-labelledby","DialogContent","DialogContentText","TextField","multiline","rows","autoFocus","label","type","fullWidth","value","onChange","target","handlesetErrorForMaxCharInput","inputProps","maxLength","minLength","required","placeholder","DialogActions","add","date","Date","uuidv4","setTimeout","disabled","HomePageComponent","Provider","FreshiesMainComponents","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","formControl","minWidth","selectEmpty","marginTop","typography","padding","ClassifiedHomePageComponent","productFromFirebase","setproductFromFirebase","nameofProduct","setnameofProduct","producttype","setproducttype","productCondition","setproductCondition","productImage","setproductImage","productPrice","setproductPrice","productDescription","setproductDescription","errorMessgae","seterrorMessgae","history","useHistory","userDetailsFirebase","setuserDetailsFirebase","paymentOptions","setpaymentOptions","setpopUpText","stateAfterSubmit","setstateAfterSubmit","logEvent","onSnapshot","User","imagehandleChange","a","files","index","image","img","uploadFileAndGetDownloadURL","ref","put","snap","getDownloadURL","downloadURL","sendImageToFirebase","promises","forEach","i","storage","child","uid","push","all","urlsArray","idGeneratedforProduct","set","name","price","category","productDetails","imageURL","userEmail","email","userEmailVerified","emailVerified","userDisplayName","displayName","like","peopleWhoLiked","disLike","addLikeToFirebase","numToAdd","includes","update","FieldValue","arrayRemove","merge","arrayUnion","handleClickSnackbar","expanded","setExpanded","openSnackbar","style","DialogTitle","FormControl","InputLabel","Select","labelId","MenuItem","multiple","accept","CardHeader","toUpperCase","title","subheader","toDate","toLocaleString","CardMedia","component","markedAsSold","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Login","setemail","password","setpassword","wrongCredentialsInLogin","setwrongCredentialsInLogin","preventDefault","signInWithEmailAndPassword","userCredntials","signInWithRedirect","result","credential","signInWithGoogleAuth","process","signInWithMicrosoftAuth","SignUp","setname","userAlreadyExits","setuserAlreadyExits","createUserWithEmailAndPassword","userCredentails","StyledMenu","withStyles","border","props","Menu","elevation","getContentAnchorEl","transformOrigin","StyledMenuItem","palette","main","common","white","CustomizedMenus","anchorEl","setAnchorEl","currentTarget","aria-controls","aria-haspopup","keepMounted","Boolean","signOut","signOutOfFirebase","ListItemIcon","HeaderComponent","userStatus","setuserStatus","SplitButton","emailOfProductOwner","idOfProduct","soldOrNot","statusOfItemMarkedAsSold","setStatusOfItemMarkedAsSold","options","userstate","anchorRef","useRef","selectedIndex","setSelectedIndex","current","contains","direction","alignItems","ButtonGroup","prevOpen","Popper","role","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","option","selected","delete","response","handleMenuItemClick","ClassifiedProductView","useParams","productDataFromFirebase","setproductDataFromFirebase","exists","FooterComponent","href","AnswerComponent","answerListsOfQuestions","setanswerListsOfQuestions","stateAfterAnswerSubmit","setstateAfterAnswerSubmit","stateAfterVote","setstateAfterVote","openSnackbarProps","setopenSnackbarProps","seeMoreState","setSeeMoreState","checkedBox","setCheckedBox","setanswer","voteAnswer","answerId","voteCount","vote","hasUserUpVoted","peopleWhoUpVoted","hasUserDownVoted","peopleWhoDownVoted","resp","changingState","docData","answeredBy","div","FormControlLabel","control","Checkbox","checked","idInnerCollection","replies","emailUsedToAnswerSavedForSecurityPurpose","App","document","marginRight","exact","path","fetchCount","amount","incrementAsync","createAsyncThunk","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ac0a1e.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\r\n// import * as firebase from \"firebase/app\"\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCswzyYaAcS5nDSvl7ybRRhuM1wZcyOCWc\",\r\n    authDomain: \"jwork-4d8dc.firebaseapp.com\",\r\n    projectId: \"jwork-4d8dc\",\r\n    storageBucket: \"jwork-4d8dc.appspot.com\",\r\n    messagingSenderId: \"556572034928\",\r\n    appId: \"1:556572034928:web:c33f35bba235fe2401f1b5\",\r\n    measurementId: \"G-2XSB9M96P3\"\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth()\r\n// const storage = firebase.storage()\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst microSoftAuthProvider = new firebase.auth.OAuthProvider('microsoft.com');\r\n// analytics\r\nconst analytics = firebase.analytics()\r\n\r\n\r\nexport { provider, db, auth, microSoftAuthProvider, analytics }","import { createContext } from \"react\";\r\n\r\nexport const userContext = createContext(null)\r\nexport const HomePageComponentsToSync = createContext(null)","import React, { useContext, useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { db } from \"../Firebase/Firebase\"\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Link } from \"react-router-dom\"\r\nimport { Grid } from '@material-ui/core';\r\nimport { HomePageComponentsToSync } from \"./ContextComponent\"\r\n\r\nimport \"./ListNews.css\"\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nconst ListNews = () => {\r\n    const classes = useStyles();\r\n    const [questionAndAnswerFromFB, setquestionAndAnswerFromFB] = useState(undefined)\r\n    // usecontect-stuffs for sync\r\n    const { stateForHomePageTwoNestedCompToSync, setStateForHomePageTwoNestedCompToSync } = useContext(HomePageComponentsToSync)\r\n    // fetching questions and answers\r\n    useEffect(() => {\r\n        db.collection(\"questions\").orderBy(\"date\", \"desc\").get().then(snapshot => {\r\n            // console.log(\"ques snap, \", snapshot.docs);\r\n            setquestionAndAnswerFromFB(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                key: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        }).catch(error => console.log(\"error in fetching data from FB, \", error))\r\n\r\n        return () => {\r\n        }\r\n    }, [stateForHomePageTwoNestedCompToSync])\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                questionAndAnswerFromFB ? <Grid container spacing={1} id=\"newsList__main\" >\r\n                    {questionAndAnswerFromFB.map(item => (\r\n                        <Grid item xs={6} sm={4} md={4} lg={3} key={Math.random()}   >\r\n                            <Link to={\"/Answers/\" + item.id} className=\"link__newsDecoration\" >\r\n                                <Card className={classes.root} id=\"minWidth__card\">\r\n                                    <CardActionArea>\r\n                                        {/* <CardMedia\r\n                    className={classes.media}\r\n                    image=\"https://data.whicdn.com/images/167909674/original.jpg\"\r\n                    title=\"Contemplative Reptile\"\r\n                /> */}\r\n                                        <CardContent className=\"cardContent\">\r\n                                            <p >\r\n                                                {item?.data?.question.length < 65 ? item?.data?.question : item?.data?.question.slice(0, 60) + \"...?\"}\r\n                                            </p>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        {/* <Button size=\"small\" color=\"primary\">\r\n                Share\r\n            </Button> */}\r\n                                        <Button size=\"small\" color=\"primary\">\r\n                                            Answer.\r\n                                        </Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Link>\r\n                        </Grid>\r\n                    ))}\r\n\r\n                </Grid > : <div className=\"skeleton__div\"  ><Skeleton variant=\"rect\" width=\"80vw\" height=\"30vh\" /></div>\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ListNews\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SnackBarComponent = ({ open }) => {\r\n\r\n    // Snackbar setups\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const handleClickSnackbar = () => {\r\n        setOpenSnackbar(true);\r\n    };\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n                message=\"Please Login\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnackBarComponent\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { db } from \"../../Firebase/Firebase\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport firebase from \"firebase\"\r\nimport SnackBarComponent from \"../SnackBar/SnackBarComponent\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./AskMeAQuestionComponent.css\"\r\nimport { HomePageComponentsToSync } from '../ContextComponent';\r\nconst messages = [\r\n    {\r\n        id: 1,\r\n        primary: 'Brunch this week?',\r\n        secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\r\n        person: '/static/images/avatar/5.jpg',\r\n    }]\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(16),\r\n            height: theme.spacing(16),\r\n        },\r\n    },\r\n}));\r\nconst AskMeAQuestionComponent = () => {\r\n    const classes = useStyles();\r\n    // use-context stuffs\r\n    const { stateForHomePageTwoNestedCompToSync, setStateForHomePageTwoNestedCompToSync } = useContext(HomePageComponentsToSync)\r\n    console.log(\"context is, \", stateForHomePageTwoNestedCompToSync);\r\n\r\n    // extra state to not allow double clicking of submit\r\n    const [noDoubleSUbmitCLick, setnoDoubleSUbmitCLick] = useState(false)\r\n    const [questionAnswerFromFB, setquestionAnswerFromFB] = useState([{\r\n        id: 1,\r\n        data: {\r\n            question: 'What are the three Guṇas(elements)?',\r\n            answer: \"The three gunas are called: sattva (goodness, calmness, harmonious), rajas (passion, activity, movement), and tamas (ignorance, inertia, laziness). \"\r\n        }\r\n    }])\r\n    const [stateAfterQuestionSubmit, setstateAfterQuestionSubmit] = useState(false)\r\n\r\n    // all setup for Form Dialog Box\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setquestion(\"\")\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setquestion(\"\")\r\n    };\r\n\r\n    // send question to firebase\r\n    const [useSnackBarState, setUseSnackBarState] = useState(false)\r\n    const sendQuestionToFirebase = () => {\r\n        setstateAfterQuestionSubmit(true)\r\n        if (user) {\r\n            setnoDoubleSUbmitCLick(!noDoubleSUbmitCLick)\r\n            db.collection(\"questions\").add({\r\n                question: question,\r\n                date: new Date(),\r\n                answered: false,\r\n                id: uuidv4(),\r\n            }).then(doc => {\r\n                console.log(\"snap while sending question to FB\", doc)\r\n                setStateForHomePageTwoNestedCompToSync(!stateForHomePageTwoNestedCompToSync)\r\n                setOpen(false)\r\n                setquestion(\"\")\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"Error while sending question to FB\", error)\r\n                    setOpen(false)\r\n                })\r\n        } else {\r\n            setUseSnackBarState(!useSnackBarState)\r\n            setTimeout(() => {\r\n                setUseSnackBarState(false)\r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n    const [user, setUser] = useState(undefined)\r\n    // fetching questions and answers + checking user state\r\n    useEffect(() => {\r\n        db.collection(\"questions\").orderBy(\"date\", \"desc\").get().then(snapshot => {\r\n            // console.log(\"ques snap, \", snapshot.docs);\r\n            setquestionAnswerFromFB(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                key: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        }).catch(error => console.log(\"error in fetching data from FB, \", error))\r\n\r\n        firebase.auth().onAuthStateChanged(userState => {\r\n            if (userState) {\r\n                setUser(userState)\r\n            } else {\r\n                setUser(undefined)\r\n            }\r\n        })\r\n\r\n        return () => {\r\n        }\r\n    }, [stateForHomePageTwoNestedCompToSync])\r\n\r\n    // setting question checking for more than 120 chars\r\n    const [question, setquestion] = useState(\"\")\r\n    const [ErrorForMaxCharInput, setErrorForMaxCharInput] = useState(false)\r\n    const handlesetErrorForMaxCharInput = (e) => {\r\n        setquestion(e.target.value)\r\n        // if (question?.length === 200) {\r\n        //     console.log(\"elmgth is, \", question?.length);\r\n        //     setErrorForMaxCharInput(true)\r\n        // } else {\r\n        //     setErrorForMaxCharInput(false)\r\n        // }\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"main__appbar\">\r\n            <div className=\"appBAr\">\r\n                <Paper square className={classes.paper}>\r\n                    <Typography className={classes.text} variant=\"h6\" >\r\n                        Ask a Question.\r\n                    </Typography>\r\n                    <List className={classes.list}>\r\n                        {questionAnswerFromFB.map(query => (\r\n                            <React.Fragment key={query.id} >\r\n                                <Link to={\"/Answers/\" + query.id} className=\"link__newsDecoration\">\r\n                                    <ListItem button>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar alt=\"Profile Picture\" src={\"\"} />\r\n                                        </ListItemAvatar>\r\n                                        {!query.data?.answered && < ListItemText primary={query.data?.question.length < 120 ? query.data?.question : query.data?.question.slice(0, 112) + \"...?\"} secondary={\"No answer available at the moment.\"} />}\r\n                                        {query.data?.answered && < ListItemText primary={query.data?.question.length < 120 ? query.data?.question : query.data?.question.slice(0, 112) + \"...?\"} secondary={\"Click to view replies.\"} />}\r\n                                        {/* {query.data?.answered && query.data?.answered[0] <= 80 && <ListItemText primary={query.data?.question} secondary={query.data?.answered[0]} />} */}\r\n                                        {/* {query.data?.answer?. > 80 && <ListItemText primary={query.data?.question} secondary={query.data?.answer?.slice(0, 80)} /> + \"...\"} */}\r\n                                    </ListItem>\r\n                                </Link>\r\n\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n            </div>\r\n\r\n            <div className=\"appbar__add\" id=\"fab__id\" >\r\n                <Fab color=\"secondary\" aria-label=\"add\" className=\"fab__icon\">\r\n                    <AddIcon onClick={e => handleClickOpen()} >A</AddIcon>\r\n                </Fab>\r\n            </div>\r\n\r\n            {/* Form  Popup for a Question */}\r\n            <div>\r\n                <Dialog open={open} onClose={e => handleClose()} aria-labelledby=\"form-dialog-title\">\r\n                    {/* <DialogTitle id=\"form-dialog-title\">Ask me a question and I will answer it in a thread below.</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ask us a question and we will answer it in a thread below.\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            multiline\r\n                            rows={7}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Question?(min 20 words and max 200 words)\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={question}\r\n                            onChange={e => handlesetErrorForMaxCharInput(e)}\r\n                            inputProps={{ maxLength: 200, minLength: 100, required: true, placeholder: \"Put your question here.\" }}\r\n                        />\r\n                    </DialogContent>\r\n                    {/* {ErrorForMaxCharInput && <p>No more than 200 chars allowed</p>} */}\r\n                    <DialogActions>\r\n                        <Button onClick={e => handleClose()} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={e => sendQuestionToFirebase(e)} color=\"primary\" disabled={stateAfterQuestionSubmit | question?.length < 20}  >\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            {/* Signed in as Component */}\r\n            {/* {user?.email && <div className=\"signedAs\">\r\n                signed in as {user.email}\r\n            </div>} */}\r\n            <SnackBarComponent open={useSnackBarState} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AskMeAQuestionComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport ListNews from './ListNews'\r\nimport BottomAppBar from \"./AskQuestion/AskMeAQuestionComponent\"\r\nimport './HomePageComponent.css'\r\nimport { HomePageComponentsToSync } from \"./ContextComponent\"\r\n\r\nconst HomePageComponent = () => {\r\n    const [stateForHomePageTwoNestedCompToSync, setStateForHomePageTwoNestedCompToSync] = useState(false)\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [stateForHomePageTwoNestedCompToSync])\r\n    return (\r\n        <HomePageComponentsToSync.Provider value={{ stateForHomePageTwoNestedCompToSync, setStateForHomePageTwoNestedCompToSync }}>\r\n            <div id=\"homepage__main\">\r\n                {/* the below is question ask topappbar */}\r\n                <div className=\"bottomBar__main\">\r\n                    <BottomAppBar />\r\n                </div>\r\n                {/* the below is grid in main homepage */}\r\n                <div className=\"tets\">\r\n                    <ListNews />\r\n                </div>\r\n            </div>\r\n        </HomePageComponentsToSync.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default HomePageComponent\r\n","import React from 'react'\r\nimport ListNews from '../ListNews'\r\n\r\nconst FreshiesMainComponents = () => {\r\n    return (\r\n        <div>\r\n            <ListNews />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FreshiesMainComponents\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { db } from \"../../Firebase/Firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FavoriteBorderOutlined from \"@material-ui/icons/FavoriteBorderOutlined\";\r\n\r\nimport \"./ClassifiedHomePageComponent.css\";\r\n\r\n// image file resizer\r\nconst resizeFile = (file) =>\r\n    new Promise((resolve) => {\r\n        Resizer.imageFileResizer(\r\n            file,\r\n            480,\r\n            320,\r\n            \"JPEG\",\r\n            80,\r\n            0,\r\n            (uri) => {\r\n                resolve(uri);\r\n            },\r\n            \"file\"\r\n        );\r\n    });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst ClassifiedHomePageComponent = () => {\r\n    // initializations\r\n    const [productFromFirebase, setproductFromFirebase] = useState(\"\")\r\n    const [nameofProduct, setnameofProduct] = useState(\"\")\r\n    const [producttype, setproducttype] = React.useState('');\r\n    const [productCondition, setproductCondition] = useState(\"\")\r\n    const [productImage, setproductImage] = useState([])\r\n    const [productPrice, setproductPrice] = useState(\"\")\r\n    const [productDescription, setproductDescription] = useState(\"\")\r\n    const [errorMessgae, seterrorMessgae] = useState(false)\r\n    const history = useHistory()\r\n    const [userDetailsFirebase, setuserDetailsFirebase] = useState(\"\")\r\n    const [paymentOptions, setpaymentOptions] = useState([])\r\n    const [popUpText, setpopUpText] = useState(\"\")\r\n    const [stateAfterSubmit, setstateAfterSubmit] = useState(true)\r\n    // console.log(\"use\", productFromFirebase[0]?.data?.date.tol);\r\n\r\n    useEffect(() => {\r\n        firebase.analytics().logEvent(\"User is in Main Classified shop Component\")\r\n        // fetching all public posts\r\n        db.collection(\"products\").orderBy(\"date\", \"desc\").onSnapshot(snapshot => {\r\n            setproductFromFirebase(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    key: doc.id,\r\n                    data: doc.data()\r\n                }\r\n                ))\r\n            )\r\n        })\r\n        // checking user and his stauts\r\n        firebase.auth().onAuthStateChanged(User => {\r\n            if (User) {\r\n                setuserDetailsFirebase(User)\r\n                console.log(\"user found\", User);\r\n            }\r\n            else {\r\n                console.log(\"User not found\");\r\n                // history.push(\"/Login\")\r\n            }\r\n        })\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n\r\n    // Image change handel\r\n    const imagehandleChange = async (e) => {\r\n        console.log(e.target.files.length);\r\n        // if (e.target.files[0]) {\r\n\r\n\r\n        if (e.target.files) {\r\n            // const files = []\r\n            for (let index = 0; index < e.target.files.length && index < 4; index++) {\r\n                console.log(\"image is,\", e.target.files[0]);\r\n                // setproductImage(e.target.files[0])\r\n                // resize\r\n                try {\r\n                    const file = e.target.files[index];\r\n                    const image = await resizeFile(file);\r\n                    console.log(\"imag from resizer\", image);\r\n                    setproductImage(img => [...img, image])\r\n                } catch (err) {\r\n                    console.log(\"Error in resizing image, \", err);\r\n                }\r\n            }\r\n        }        // }\r\n    }\r\n\r\n\r\n    const uploadFileAndGetDownloadURL = async (ref, file) => {\r\n        const snap = await ref.put(file);\r\n        const downloadURL = await snap.ref.getDownloadURL();\r\n\r\n        return downloadURL;\r\n    };\r\n\r\n    const sendImageToFirebase = async (e) => {\r\n        setstateAfterSubmit(!stateAfterSubmit)\r\n        if (nameofProduct && producttype && productCondition && productPrice && productImage) {\r\n            console.log(\"Trying to send image to firebase\");\r\n\r\n            const promises = []\r\n            productImage.forEach((image, i) => {\r\n                var storageRef = firebase.storage().ref();\r\n                var ref = storageRef.child(`${userDetailsFirebase.uid}/` + Math.random())\r\n                promises.push(uploadFileAndGetDownloadURL(ref, image));\r\n            })\r\n            const res = await Promise.all(promises).then(urlsArray => {\r\n                // send details from form\r\n                console.log(\"rlrurl\", urlsArray);\r\n                if (nameofProduct && producttype && productCondition && productPrice) {\r\n                    console.log(\"urls, \", urlsArray);\r\n                    const idGeneratedforProduct = userDetailsFirebase.uid + uuidv4()\r\n                    db.collection(\"products\").doc(idGeneratedforProduct).set(\r\n                        {\r\n                            id: idGeneratedforProduct,\r\n                            date: new Date(),\r\n                            name: nameofProduct,\r\n                            price: productPrice,\r\n                            category: producttype,\r\n                            productDetails: productCondition,\r\n                            productDescription: productDescription,\r\n                            imageURL: urlsArray,\r\n                            userEmail: userDetailsFirebase.email,\r\n                            userEmailVerified: userDetailsFirebase.emailVerified,\r\n                            userDisplayName: userDetailsFirebase.displayName,\r\n                            paymentOptions: paymentOptions,\r\n                            like: 0,\r\n                            peopleWhoLiked: [\"ds@gmial.com\", \"djs.com\"],\r\n                            disLike: 0\r\n                        },\r\n                    ).then(e => {\r\n                        // res-setting everything\r\n                        setOpen(false);\r\n                        seterrorMessgae(false)\r\n                        setstateAfterSubmit(true)\r\n                        setnameofProduct('')\r\n                        setproducttype(\"\")\r\n                        setproductCondition(\"\")\r\n                        setproductImage([])\r\n                        setproductPrice(\"\")\r\n                        setproductDescription(\"\")\r\n                        setpaymentOptions([])\r\n                    }).catch(error => console.log(\"Error while sendig items to Firebase\"))\r\n                } else {\r\n                    seterrorMessgae(true)\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    // ading like/dis-like in each products\r\n    const addLikeToFirebase = (data, numToAdd) => {\r\n        console.log(\"id in funciton, \", data, numToAdd);\r\n        if (userDetailsFirebase) {\r\n            console.log(\"user found\", userDetailsFirebase);\r\n            db.collection(\"products\").doc(data?.id).get().then(doc => {\r\n                console.log(\"chcking array, \", doc.data().peopleWhoLiked?.includes(userDetailsFirebase?.email));\r\n                if (!doc.data().peopleWhoLiked?.includes(userDetailsFirebase?.email)) {\r\n                    db.collection(\"products\").doc(data?.id).update({\r\n                        like: ++doc.data().like,\r\n                        peopleWhoLiked: firebase.firestore.FieldValue.arrayUnion(userDetailsFirebase?.email ? userDetailsFirebase?.email : \"joke\")\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike toFirebase Funciton, \", error))\r\n                } else {\r\n                    db.collection(\"products\").doc(data?.id).update({\r\n                        like: --doc.data().like,\r\n                        peopleWhoLiked: firebase.firestore.FieldValue.arrayRemove(userDetailsFirebase?.email)\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike in -else statement- toFirebase Funciton, \", error))\r\n                }\r\n            }).catch(error => console.log(\"error in addLiketoFirebase Function, \", error))\r\n        }\r\n        else {\r\n            console.log(\"User not found while trying to send Like\");\r\n            setpopUpText(\"Please Login.\")\r\n            handleClickSnackbar()\r\n            // history.push(\"/Login\")\r\n        }\r\n\r\n    }\r\n\r\n    // setup from Material-UI for Grid container and card\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    // setup for Input dailog box from Material UI\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        if (userDetailsFirebase) {\r\n            setOpen(true);\r\n            console.log(\"user found\", userDetailsFirebase);\r\n        }\r\n        else {\r\n            handleClickSnackbar()\r\n            setTimeout(() => {\r\n                history.push(\"/Login\")\r\n            }, 500);\r\n        }\r\n\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        seterrorMessgae(false)\r\n        setpaymentOptions([])\r\n    };\r\n    const handleChange = (event) => {\r\n        setproducttype(event.target.value);\r\n    };\r\n\r\n\r\n    // Snackbar setups\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const handleClickSnackbar = () => {\r\n        setOpenSnackbar(true);\r\n    };\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    console.log(\"the logedinuser is, \", userDetailsFirebase);\r\n    return (\r\n        <div className=\"test\" id=\"testinLocalCSSusingId\">\r\n            <div className=\"button\">\r\n                <div style={{ margin: \"20px\" }}>\r\n                    <Button className=\"addButton\" variant=\"outlined\" color=\"primary\" onClick={e => handleClickOpen(e)}>\r\n                        Add to Market.\r\n                    </Button>\r\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                        <DialogContent>\r\n                            {!errorMessgae && <DialogContentText >\r\n                                Please fill in the details to add your item to the store.\r\n                            </DialogContentText>}\r\n                            {errorMessgae && <DialogContentText style={{ color: \"red\" }}>\r\n                                Please fill in the required.\r\n                            </DialogContentText>}\r\n                            <TextField\r\n                                autoFocus\r\n                                required\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"Product name\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                value={nameofProduct}\r\n                                placeholder=\"Big black Ikea Drawer\"\r\n                                onChange={e => setnameofProduct(e.target.value)}\r\n                            />\r\n                            <FormControl className={classes.formControl} style={{ margin: 0 }} >\r\n                                <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={producttype}\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value={\"Automotive, Motorcycle & Industrial\"}>Automotive, Motorcycle & Industrial</MenuItem>\r\n                                    <MenuItem value={\"Furniture\"}>Furniture</MenuItem>\r\n                                    <MenuItem value={\"Apparel, Shoes & Watches\"}>Apparel, Shoes & Watches</MenuItem>\r\n                                    <MenuItem value={\"Apparel, Shoes & Watches\"}>Beauty & Health</MenuItem>\r\n                                    <MenuItem value={\"Books & Audible\"}>Books & Audible</MenuItem>\r\n                                    <MenuItem value={\"Electronics & Computers\"}>Electronics & Computers</MenuItem>\r\n                                    <MenuItem value={\"Grocery/Food\"}>Grocery/Food</MenuItem>\r\n                                    <MenuItem value={\"Home, Garden, Pets & DIY\"}>Home, Garden, Pets & DIY</MenuItem>\r\n                                    <MenuItem value={\"Movies, TV, Music & Games\"}>Movies, TV, Music & Games</MenuItem>\r\n                                    <MenuItem value={\"Other\"}>Other</MenuItem>\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br></br>\r\n                            <FormControl className={classes.formControl} style={{ margin: 0 }}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Condition</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={productCondition}\r\n                                    onChange={e => setproductCondition(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={\"New\"}>New</MenuItem>\r\n                                    <MenuItem value={\"Used only once\"}>Used only once</MenuItem>\r\n                                    <MenuItem value={\"Used and all parts fine\"}>Used and all parts fine</MenuItem>\r\n                                    <MenuItem value={\"Used but few parts not working\"}>Used but few parts not working</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br></br>\r\n                            <FormControl className={classes.formControl} style={{ margin: 0 }}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Payment</InputLabel>\r\n                                <Select\r\n                                    multiple\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={paymentOptions}\r\n                                    onChange={e => setpaymentOptions(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={\"Cash\"}>Cash</MenuItem>\r\n                                    <MenuItem value={\"Sparkasse\"}>Sparkasse</MenuItem>\r\n                                    <MenuItem value={\"Paypal\"}>Paypal</MenuItem>\r\n                                    <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"description\"\r\n                                label=\"Description\"\r\n                                type=\"text\"\r\n                                multiline\r\n                                rows={3}\r\n                                fullWidth\r\n                                value={productDescription}\r\n                                onChange={e => setproductDescription(e.target.value)}\r\n                            />\r\n                            <form style={{ color: \"rgb(112 103 103 / 87%)\" }}>\r\n                                <label id=\"fname\" style={{ color: \"rgb(112 103 103 / 87%)\" }}>Product Image(up to 4 images)</label><br></br>\r\n                                <input type=\"file\" style={{ color: \"rgb(112 103 103 / 87%)\" }} accept=\"image/*\" multiple\r\n                                    onChange={e => imagehandleChange(e)} ></input>\r\n                                {/* <button type=\"submit\" onClick={sendImageToFirebase}>send image</button> */}\r\n                            </form>\r\n\r\n                            <TextField\r\n\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"Price\"\r\n                                type=\"Number\"\r\n                                fullWidth\r\n                                value={productPrice}\r\n                                onChange={e => setproductPrice(e.target.value)}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={e => handleClose(e)} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            {stateAfterSubmit && <Button onClick={e => sendImageToFirebase(e)} color=\"primary\"\r\n                                disabled={!productImage || !nameofProduct || !nameofProduct || !producttype || !productCondition || !productPrice || !productImage}\r\n                            >\r\n                                Submit\r\n                            </Button>}\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {productFromFirebase ? <div className=\"cards__main\">\r\n                <Grid container spacing={2} >\r\n                    {productFromFirebase.map((item) => (\r\n                        <Grid className=\"grid__main\" item xs={12} sm={6} md={4} lg={4} key={Math.random()}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                            {item?.data?.userEmail.slice(0, 1).toUpperCase()}\r\n                                        </Avatar>\r\n                                    }\r\n                                    action={\r\n                                        <IconButton aria-label=\"settings\">\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    title={item.data.userEmail}\r\n                                    subheader={\"posted at \" + item.data.date.toDate().toLocaleString()}\r\n                                />\r\n                                <Link to={\"/Classified/Products/\" + item.data.id} className=\"linkTextForCard\" >\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={item.data.imageURL ? item.data.imageURL[0] : \"https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg\"}\r\n                                        title=\"Paella dish\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography\r\n                                            variant=\"h5\"\r\n                                            color=\"textPrimary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {item?.data.name ? item?.data.name : \"NA\"}\r\n                                        </Typography>\r\n                                        <div className=\"already__sold\">\r\n                                            <Typography\r\n                                                variant=\"body2\"\r\n                                                color=\"error\"\r\n                                                component=\"p\"\r\n                                            >\r\n                                                {item?.data.productDetails ? item?.data?.productDetails + \" €\" + item?.data?.price : \"NA\"}\r\n\r\n                                            </Typography>\r\n                                            <span\r\n                                            >\r\n                                                {item?.data?.markedAsSold && <p>Already Sold😪</p>}\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {item?.data.productDescription ? item?.data.productDescription?.slice(0, 100) : \"NA\"}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Link>\r\n                                <CardActions disableSpacing>\r\n                                    {item.data?.peopleWhoLiked?.includes(userDetailsFirebase?.email) && <IconButton onClick={e => addLikeToFirebase(item?.data, -1)} aria-label=\"add to favorites\" style={{ color: \"#ed4956\" }}>\r\n                                        <FavoriteIcon />\r\n                                    </IconButton>}\r\n                                    {!item.data?.peopleWhoLiked?.includes(userDetailsFirebase?.email) && <IconButton aria-label=\"add to favorites\" onClick={e => addLikeToFirebase(item?.data, 1)}>\r\n                                        <FavoriteBorderOutlined />\r\n                                    </IconButton>}\r\n                                    {/* <IconButton aria-label=\"add to favorites\">\r\n                                        <FavoriteBorderOutlined onClick={e => addLikeToFirebase(item?.data)} />\r\n                                    </IconButton> */}\r\n                                    <IconButton aria-label=\"share\">\r\n                                        <ShareIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={e => handleExpandClick(e)}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon />\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <p className=\"like\">{item?.data?.like + \" likes\"}</p>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <Typography paragraph>Description:</Typography>\r\n                                        <Typography paragraph>\r\n                                            {item?.data?.productDescription ? item?.data?.productDescription : \"NA\"}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div> : <div className=\"skeleton__div\"  ><Skeleton variant=\"rect\" width=\"80vw\" height=\"60vh\" /></div>\r\n            }\r\n\r\n\r\n            {/* Snackbar sub-component */}\r\n\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={openSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleCloseSnackbar}\r\n                    message=\"Please Login\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={e => handleCloseSnackbar(e)}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default ClassifiedHomePageComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport { provider, microSoftAuthProvider } from \"../../Firebase/Firebase\"\r\nimport \"./Login.css\";\r\n// import { Log_in } from \"./features/user/userSlice\";\r\n\r\nconst Login = () => {\r\n    const [email, setemail] = useState(\"@gmail.com\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [wrongCredentialsInLogin, setwrongCredentialsInLogin] = useState(false)\r\n    const history = useHistory();\r\n    const loginToFirebase = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(userCredntials => {\r\n            console.log(\"User found on firebase, \", userCredntials);\r\n            setwrongCredentialsInLogin(false)\r\n            history.push(\"/\")\r\n        }).catch(error => {\r\n            console.log(\"user not found\");\r\n            setwrongCredentialsInLogin(true)\r\n        })\r\n    }\r\n\r\n    // google sign-in authentication\r\n    const signInWithGoogleAuth = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().signInWithRedirect(provider)\r\n            .then(result => {\r\n                console.log(\"credentials from google auth, \", result.credential)\r\n                setwrongCredentialsInLogin(false)\r\n                history.push(\"/\")\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error in google sign-in authentication\", error)\r\n                setwrongCredentialsInLogin(true)\r\n            })\r\n    }\r\n\r\n    const signInWithMicrosoftAuth = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().signInWithRedirect(microSoftAuthProvider)\r\n            .then(result => {\r\n                console.log(\"credentials from Microsft auth, \", result.credential)\r\n                setwrongCredentialsInLogin(false)\r\n                history.push(\"/\")\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error in Microsft sign-in authentication\", error)\r\n                setwrongCredentialsInLogin(true)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.analytics().logEvent(\"User is in Login Componen\")\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                history.push(\"/\")\r\n            } else {\r\n\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main_div__grid\" >\r\n\r\n            <div className=\"main123\">\r\n                <h1 className=\"header1\">Login</h1>\r\n                <hr className=\"hr__tag\" />\r\n                <h3 className=\"header3\">Welcome to Login page</h3>\r\n\r\n                <input className=\"inp\" value={email} onChange={(e) => setemail(e.target.value)} type=\"email\" placeholder=\"Email\" />\r\n                <input\r\n                    className=\"inp\"\r\n                    value={password}\r\n                    onChange={(e) => setpassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                {wrongCredentialsInLogin && <p style={{ color: \"#bb2124\" }} >Wrong credentials!!!</p>}<br />\r\n                <p className=\"para\">\r\n                    Not a member?{\" \"}\r\n                    <Link to=\"/SignUp\">\r\n                        <span className=\"span1\">\r\n                            <u>Register</u>\r\n                        </span>\r\n                    </Link>\r\n                </p>\r\n                <button onClick={loginToFirebase} type=\"submit\" className=\"butt\" >\r\n                    Log In\r\n                </button>\r\n\r\n                <div className=\"hrs\">\r\n                    <hr className=\"hr_line\" /> <p>or</p> <hr className=\"hr_right\" />\r\n                </div>\r\n                <button onClick={e => signInWithGoogleAuth(e)} className=\"coninueGoogle_butt\">\r\n                    <img src={process.env.PUBLIC_URL + '/google-logo.ico'} alt=\"logo\" />\r\n                    Continue With Google\r\n                </button>\r\n                <div className=\"smallBreakbetweenAuth\" ></div>\r\n                <button onClick={e => signInWithMicrosoftAuth(e)} className=\"coninueGoogle_butt\">\r\n                    <img src={process.env.PUBLIC_URL + '/m.png'} alt=\"logo\" />\r\n                    Continue With Outlook\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\"\r\n\r\n\r\nimport \"./Login.css\";\r\n\r\nconst SignUp = () => {\r\n    const [name, setname] = useState(\"\");\r\n    const [email, setemail] = useState(\"@gmail.com\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [userAlreadyExits, setuserAlreadyExits] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const sendFromToFirbase = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(userCredentails => {\r\n            console.log(\"user credtenial returned after creating, \", userCredentails);\r\n            setuserAlreadyExits(false)\r\n            history.push(\"/Login\")\r\n        }).catch(error => {\r\n            console.log(\"error while creating user in firebase, \", error);\r\n            setuserAlreadyExits(true)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main_div__grid\">\r\n            <div className=\"main123\">\r\n                <h1 className=\"header1\" >Sign Up</h1>\r\n                <hr />\r\n                <h3 className=\"header3\" >Welcome to SignUp page</h3>\r\n\r\n                <input\r\n                    className=\"inp\"\r\n                    value={name}\r\n                    onChange={(e) => setname(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"inp\"\r\n                    value={email}\r\n                    onChange={(e) => setemail(e.target.value)}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"inp\"\r\n                    value={password}\r\n                    onChange={(e) => setpassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                />\r\n                {userAlreadyExits && <p style={{ color: \"#bb2124\" }}>Can't create duplicate/invalid user.</p>} <br />\r\n                <button className=\"butt\" onClick={sendFromToFirbase} type=\"submit\">\r\n                    Sign Up\r\n                </button>\r\n\r\n            </div >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import React, { useEffect, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport firebase from \"firebase\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport \"./ButtonWithLogoutFunc.css\"\r\nimport { useHistory } from 'react-router-dom';\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus() {\r\n    // setup for menus\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // sign out of Firebase\r\n    const history = useHistory()\r\n    const signOutOfFirebase = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"hahah\");\r\n        firebase.auth().signOut().then(user => {\r\n            console.log(\"user signed out\");\r\n            history.push(\"/Login\")\r\n            // setuserStatus(false)\r\n        }).catch(error => {\r\n            console.log(\"user signed out\");\r\n        })\r\n    }\r\n    // \r\n    const [user, setUser] = useState(undefined)\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                setUser(user)\r\n            } else {\r\n                setUser(undefined)\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleClick}>\r\n                <SettingsIcon\r\n                    fontSize=\"large\"\r\n                    aria-controls=\"customized-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    variant=\"contained\"\r\n\r\n\r\n                >\r\n                    Open Menu\r\n                </SettingsIcon>\r\n            </IconButton>\r\n\r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <div className=\"signedAs__main\">\r\n                    <span className=\"signedAs__span\">Signed-in as</span>\r\n                    <p className=\"signedAs__email\"> {user?.email}</p>\r\n                </div>\r\n\r\n\r\n                <StyledMenuItem onClick={e => signOutOfFirebase(e)} >\r\n                    <ListItemIcon>\r\n                        <ExitToAppIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Log Out\" />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <BookIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Documentation\" />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem>\r\n                    <ListItemIcon>\r\n                        <InfoIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Terms and Condition\" />\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n}","import { IconButton } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport firebase from 'firebase';\r\nimport ButtonWithLogoutFunctionComponent from \"./Login And Logout/ButtonWithLogoutFunctionComponent\"\r\nimport \"./HeaderComponent.css\"\r\n\r\nconst HeaderComponent = () => {\r\n\r\n    const history = useHistory()\r\n    const signToFirebase = () => {\r\n        history.push(\"/LogIn\")\r\n    }\r\n\r\n\r\n    const [userStatus, setuserStatus] = useState(undefined)\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                setuserStatus(user)\r\n            } else {\r\n                setuserStatus(undefined)\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"router__div stickyProp\">\r\n            <nav className=\"nav__bar\" >\r\n                {/* Home Exams* Homeworks* Notes* Classified* Contact */}\r\n                <ul className=\"ul__list\">\r\n                    <li>\r\n                        <Link to=\"/\" className=\"linkText \" style={{ color: \"#06201b\" }} >Home</Link>\r\n                    </li>\r\n                    {/* <li>\r\n                        <Link to=\"/Freshies\" className=\"linkText\" style={{ color: \"#06201b\" }}>Freshies</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Homeworks\" className=\"linkText\" style={{ color: \"#06201b\" }}>Assignments</Link>\r\n                    </li> */}\r\n                    {/* <li>\r\n            <Link to=\"/Notes\" style={{ color: \"white\"}}>Notes</Link>\r\n        </li> */}\r\n                    <li>\r\n                        <Link to=\"/Classified\" className=\"linkText\" style={{ color: \"#06201b\" }}>Classified</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"header__Icons\"  >\r\n                {!userStatus && <IconButton aria-label=\"Sign\" onClick={signToFirebase}  >\r\n                    <PersonAddIcon fontSize=\"large\" />\r\n                </IconButton>}\r\n                {/* {userStatus && <IconButton aria-label=\"add to favorites\" onClick={signOutOfFirebase} >\r\n                    <ExitToAppIcon fontSize=\"large\" />\r\n                </IconButton>} */}\r\n                {userStatus && <ButtonWithLogoutFunctionComponent />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport firebase from \"firebase\"\r\nimport { db } from '../../Firebase/Firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { userContext } from '../ContextComponent';\r\n\r\nexport default function SplitButton({ emailOfProductOwner, idOfProduct, soldOrNot }) {\r\n\r\n    const { statusOfItemMarkedAsSold, setStatusOfItemMarkedAsSold } = useContext(userContext)\r\n    console.log(\"test\", statusOfItemMarkedAsSold);\r\n\r\n\r\n    const options = [soldOrNot ? \"Marked as Not-Sold\" : \"Marked as Sold\", 'Edit the details', 'Delete'];\r\n    const history = useHistory()\r\n    // checking user state\r\n    const [user, setUser] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(userstate => {\r\n            if (userstate) {\r\n                setUser(userstate)\r\n            } else {\r\n                setUser(undefined)\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    // setup for the Button-Group toogle\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n    const handleMenuItemClick = (event, index) => {\r\n        console.log(index);\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n        // Deleting the product\r\n        if (index === 2) {\r\n            db.collection(\"products\").doc(idOfProduct).delete().then(response => {\r\n                console.log(\"Item deleted\");\r\n                history.push(\"/Classified\")\r\n            }).catch(error => {\r\n                console.log(\"error in deleting product\", error);\r\n            })\r\n        } else if (index === 0) {\r\n            db.collection(\"products\").doc(idOfProduct).update({\r\n                markedAsSold: !soldOrNot\r\n            }, { merge: true }).then(response => {\r\n                console.log(\"Marked as sold field updated\");\r\n                setStatusOfItemMarkedAsSold(!statusOfItemMarkedAsSold)\r\n            }).catch(error => {\r\n                console.log(\"Error in marking field as Updated\", error);\r\n            })\r\n        }\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {user?.email === emailOfProductOwner && <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'split-button-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            onClick={handleToggle}\r\n                        >\r\n                            <ArrowDropUpIcon />\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                }}\r\n                            >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleClose}>\r\n                                        <MenuList id=\"split-button-menu\">\r\n                                            {options.map((option, index) => (\r\n                                                <MenuItem\r\n                                                    key={option}\r\n                                                    // disabled={index === 2}\r\n                                                    selected={index === selectedIndex}\r\n                                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                >\r\n                                                    {option}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </Grid>\r\n            </Grid>}\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useParams } from 'react-router-dom';\r\nimport { db } from '../../Firebase/Firebase';\r\nimport { Avatar, CardMedia, IconButton } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport firebase from \"firebase\"\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport SplitButton from \"./MarkSoldDeleteEditOptionsComponent\"\r\nimport { userContext } from \"../ContextComponent\"\r\n\r\nimport './ClassifiedProductView.css';\r\nconst ClassifiedProductView = () => {\r\n    const { id } = useParams();\r\n    const [productDataFromFirebase, setproductDataFromFirebase] = useState([])\r\n    const [statusOfItemMarkedAsSold, setStatusOfItemMarkedAsSold] = useState(false) //\r\n\r\n    const [user, setUser] = useState(undefined)\r\n    useEffect(() => {\r\n        // firebase analytics\r\n        firebase.analytics().logEvent(\"User is in Main Classified shop Component\")\r\n        // getting document from store and storage\r\n        var docRef = db.collection(\"products\").doc(`${id}`);\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n                setproductDataFromFirebase(doc.data())\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n        // checking for auth state\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [id, statusOfItemMarkedAsSold])\r\n\r\n    return (\r\n        <userContext.Provider value={{ statusOfItemMarkedAsSold, setStatusOfItemMarkedAsSold }}>\r\n            <div>\r\n\r\n                {productDataFromFirebase?.id ? <div>\r\n                    <div id=\"Edit__options\">\r\n                        <SplitButton emailOfProductOwner={productDataFromFirebase?.userEmail}\r\n                            idOfProduct={productDataFromFirebase?.id} soldOrNot={productDataFromFirebase?.markedAsSold} />\r\n                    </div>\r\n                    {/* id=\"testinLocalCSSusingId__inProductview\" */}\r\n                    <div className=\"div__main__grid__productview  \" >\r\n                        <div className=\"productViewMain\" id=\"testinLocalCSSusingId__inProductview\">\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6} className=\"GiveWidth\" >\r\n                                    {/* imageURL is an array of images */}\r\n                                    {productDataFromFirebase.imageURL && <><CardMedia\r\n                                        className=\"image__product GiveWidth\"\r\n                                        image={productDataFromFirebase.imageURL ? productDataFromFirebase.imageURL[0] : \"https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg\"}\r\n                                        title=\"Paella dish\"\r\n                                    />{productDataFromFirebase?.markedAsSold && <p className=\"alreadySold\">Already Sold.</p>}</>}\r\n                                    <div>\r\n                                        {/* four image grids */}\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                    <div className=\"secondDivInGrid GiveWidth alignCenterForSecondGridwhihhchisInforGrid\">\r\n                                        <div className=\"tophead\">\r\n                                            <div>\r\n                                                <h2 className=\"productViewDetailsFont\">{productDataFromFirebase?.name}</h2>\r\n                                                <span className=\"prodPricedet\" >{\"€\" + productDataFromFirebase?.price}</span>\r\n                                            </div>\r\n                                            <div className=\"avatarContainer leftAuto\">\r\n                                                <Avatar aria-label=\"recipe\">\r\n                                                    {productDataFromFirebase?.userEmail?.slice(0, 1).toUpperCase()}\r\n                                                </Avatar>\r\n                                                <div className=\"avatarContainer__div\">\r\n                                                    <h4 style={{ color: \"#06201b\" }}>owner</h4>\r\n                                                    <h4><b style={{ color: \"#004180\" }}>{productDataFromFirebase?.userEmail}</b><sub>{productDataFromFirebase?.userEmailVerified}</sub></h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"productDetails\">\r\n                                            <h2 className=\"productViewDetailsh2\">Product Details:</h2>\r\n                                            <div className=\"productViewDetails\">\r\n                                                {productDataFromFirebase?.category && <h4> Category: {productDataFromFirebase?.category} </h4>}\r\n                                                {productDataFromFirebase?.productDetails && <h4> Condition: {productDataFromFirebase?.productDetails} </h4>}\r\n                                                {productDataFromFirebase?.category && <h4> Product: {productDataFromFirebase?.category} </h4>}\r\n                                                <div className=\"pay__div\" >\r\n                                                    <h4>Payment by🤑:&nbsp;&nbsp; </h4>\r\n                                                    <div className=\"Payment\">\r\n                                                        {productDataFromFirebase?.paymentOptions?.map((option, i) => (\r\n                                                            <button key={i} >{option}</button>\r\n                                                        ))}\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <br></br>\r\n                                        {productDataFromFirebase?.productDescription ? <div>\r\n                                            <p className=\"endtext\">Description: </p>\r\n                                            <h3 className=\"endtext\" style={{ marginLeft: \"2rem\" }} >{productDataFromFirebase?.productDescription}</h3>\r\n                                        </div> : <p className=\"endtext\">No description Available 😿.</p>}\r\n                                        <br></br> <br></br>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> : <div className=\"skeleton__div\"  ><Skeleton variant=\"rect\" width=\"80vw\" height=\"60vh\" /></div>\r\n                }\r\n\r\n            </div>\r\n        </userContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default ClassifiedProductView\r\n","\r\nimport { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport \"./FooterComponent.css\";\r\nconst FooterComponent = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <a href=\"https://www.instagram.com/infintyuj/\" className=\"link__newsDecoration\" >\r\n                <div className=\"footer__icon12\" >\r\n                    <p className=\"footer__left\">Infintyuj</p>\r\n                    <IconButton >\r\n                        <InstagramIcon color=\"error\" />\r\n                    </IconButton>\r\n                </div>\r\n            </a>\r\n            <p className=\"footer_end\">The world is Infinite.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FooterComponent;","import { Avatar, IconButton, ListItemAvatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { db } from \"../../Firebase/Firebase\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport firebase from \"firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SnackBarComponent from \"../SnackBar/SnackBarComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport \"./AnswerComponent.css\";\r\n\r\nconst AnswerComponent = () => {\r\n    const [user, setUser] = useState(undefined);\r\n    const [questionAnswerFromFB, setquestionAnswerFromFB] = useState(undefined);\r\n    const [answerListsOfQuestions, setanswerListsOfQuestions] =\r\n        useState(undefined);\r\n    const [stateAfterAnswerSubmit, setstateAfterAnswerSubmit] = useState(false);\r\n    const [stateAfterVote, setstateAfterVote] = useState(false);\r\n    const [openSnackbarProps, setopenSnackbarProps] = useState(false);\r\n    const [seeMoreState, setSeeMoreState] = useState(false); //too see all answer when clicke on see more\r\n    const [checkedBox, setCheckedBox] = React.useState(false); //checkbox\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        firebase.analytics().logEvent(\"User is in Answer Component\")\r\n        // the below  function to retreive questions\r\n        db.collection(\"questions\")\r\n            .doc(id)\r\n            .get()\r\n            .then((snapshot) => {\r\n                setquestionAnswerFromFB(snapshot.data());\r\n            })\r\n            .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n\r\n        // the below function to get  inner answer collection in question collection\r\n        db.collection(\"questions\")\r\n            .doc(id)\r\n            .collection(\"answersList\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                setanswerListsOfQuestions(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        key: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n\r\n        // checking if user is logged in\r\n        firebase.auth().onAuthStateChanged((userState) => {\r\n            if (userState) {\r\n                setUser(userState);\r\n            } else {\r\n                setUser(undefined);\r\n            }\r\n        });\r\n        return () => { };\r\n    }, [stateAfterAnswerSubmit, stateAfterVote]);\r\n\r\n    // all setup for Form Dialog Box\r\n    const [open, setOpen] = React.useState(false);\r\n    const [answer, setanswer] = useState(undefined);\r\n    const handleClickOpen = () => {\r\n        setanswer(undefined);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setanswer(undefined);\r\n    };\r\n\r\n    // send form to firebase\r\n    const sendAnswerToFirebase = () => {\r\n        if (user) {\r\n            const idInnerCollection = uuidv4();\r\n            // updating answers\r\n            db.collection(\"questions\")\r\n                .doc(id)\r\n                .collection(\"answersList\")\r\n                .doc(idInnerCollection)\r\n                .set({\r\n                    answer: answer,\r\n                    date: new Date(),\r\n                    id: idInnerCollection,\r\n                    vote: 0,\r\n                    replies: [\"No replies\"],\r\n                    peopleWhoDownVoted: [\"none\"],\r\n                    peopleWhoUpVoted: [\"None\"],\r\n                    emailUsedToAnswerSavedForSecurityPurpose: user?.email,\r\n                    answeredBy: checkedBox ? \"\" : user?.email\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"Answer sent to firebase\");\r\n                    setOpen(false);\r\n                    setanswer(undefined);\r\n                    setstateAfterAnswerSubmit(!stateAfterAnswerSubmit);\r\n                })\r\n                .catch((error) =>\r\n                    console.log(\"Error  while sending answer to firebase\")\r\n                );\r\n            // updating answered field for the answer\r\n            db.collection(\"questions\")\r\n                .doc(id)\r\n                .update({\r\n                    answered: true,\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"Answered filed updated\");\r\n                })\r\n                .catch((error) =>\r\n                    console.log(\"Error while Answered filed updated\")\r\n                );\r\n        } else {\r\n            console.log(\"PLease log in\");\r\n            setopenSnackbarProps(true);\r\n            setTimeout(() => {\r\n                setopenSnackbarProps(false);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    // adding upvote/downvote to answers\r\n    const voteAnswer = (answerId, voteCount) => {\r\n        console.log(\"asnwid\", answerId, voteCount);\r\n        console.log(\"vote answer methid being called\");\r\n\r\n        if (user) {\r\n            db.collection(\"questions\")\r\n                .doc(id)\r\n                .collection(\"answersList\")\r\n                .doc(answerId)\r\n                .get()\r\n                .then((snapshot) => {\r\n                    console.log(\"**\", snapshot.data().vote);\r\n                    const hasUserUpVoted = snapshot\r\n                        .data()\r\n                        ?.peopleWhoUpVoted.includes(user?.email);\r\n                    const hasUserDownVoted = snapshot\r\n                        .data()\r\n                        ?.peopleWhoDownVoted.includes(user?.email);\r\n                    if (!hasUserUpVoted && !hasUserDownVoted) {\r\n                        if (voteCount === 1) {\r\n                            db.collection(\"questions\")\r\n                                .doc(id)\r\n                                .collection(\"answersList\")\r\n                                .doc(answerId)\r\n                                .update({\r\n                                    vote: snapshot.data().vote + voteCount,\r\n                                    peopleWhoUpVoted: firebase.firestore.FieldValue.arrayUnion(\r\n                                        user?.email\r\n                                            ? user?.email\r\n                                            : \"Something wrong with firebase apis\"\r\n                                    ),\r\n                                })\r\n                                .then((resp) => console.log(\"success in vote fucntion1\"))\r\n                                .catch((error) => console.log(\"error in vote function\"));\r\n                        } else if (voteCount === -1) {\r\n                            db.collection(\"questions\")\r\n                                .doc(id)\r\n                                .collection(\"answersList\")\r\n                                .doc(answerId)\r\n                                .update({\r\n                                    vote: snapshot.data().vote + voteCount,\r\n                                    peopleWhoDownVoted: firebase.firestore.FieldValue.arrayUnion(\r\n                                        user?.email\r\n                                            ? user?.email\r\n                                            : \"Something wrong with firebase apis\"\r\n                                    ),\r\n                                })\r\n                                .then((resp) => console.log(\"success in vote fucntion2\"))\r\n                                .catch((error) => console.log(\"error in vote function\"));\r\n                        }\r\n\r\n                    } else if (hasUserUpVoted && !hasUserDownVoted) {\r\n                        if (voteCount === 1) {\r\n                            console.log(\"You cant vote twice.\");\r\n                        } else if (voteCount === -1) {\r\n                            // checking for edge case when vote is 0 and you want user to be nowher in array\r\n                            if (snapshot.data().vote === 1) {\r\n                                db.collection(\"questions\")\r\n                                    .doc(id)\r\n                                    .collection(\"answersList\")\r\n                                    .doc(answerId)\r\n                                    .update({\r\n                                        vote: snapshot.data().vote + voteCount,\r\n                                        peopleWhoUpVoted: firebase.firestore.FieldValue.arrayRemove(\r\n                                            user?.email\r\n                                        ),\r\n                                    })\r\n                                    .then((resp) => console.log(\"success in vote fucntion3\"))\r\n                                    .catch((error) => console.log(\"error in vote function\"));\r\n                            } else {\r\n                                db.collection(\"questions\")\r\n                                    .doc(id)\r\n                                    .collection(\"answersList\")\r\n                                    .doc(answerId)\r\n                                    .update({\r\n                                        vote: snapshot.data().vote + voteCount,\r\n                                        peopleWhoDownVoted:\r\n                                            firebase.firestore.FieldValue.arrayUnion(\r\n                                                user?.email\r\n                                                    ? user?.email\r\n                                                    : \"Something wrong with firebase apis\"\r\n                                            ),\r\n                                        peopleWhoUpVoted: firebase.firestore.FieldValue.arrayRemove(\r\n                                            user?.email\r\n                                        ),\r\n                                    })\r\n                                    .then((resp) => console.log(\"success in vote fucntion3\"))\r\n                                    .catch((error) => console.log(\"error in vote function\"));\r\n                            }\r\n                        }\r\n\r\n                    } else if (!hasUserUpVoted && hasUserDownVoted) {\r\n                        if (voteCount === -1) {\r\n                            console.log(\"You can't downvote twice\");\r\n                        } else if (voteCount === 1) {\r\n                            // check for edge case when vote is -1\r\n                            if (snapshot.data().vote === -1) {\r\n                                db.collection(\"questions\")\r\n                                    .doc(id)\r\n                                    .collection(\"answersList\")\r\n                                    .doc(answerId)\r\n                                    .update({\r\n                                        vote: snapshot.data().vote + voteCount,\r\n                                        peopleWhoDownVoted:\r\n                                            firebase.firestore.FieldValue.arrayRemove(user?.email),\r\n                                    })\r\n                                    .then((resp) => console.log(\"success in vote fucntion\"))\r\n                                    .catch((error) => console.log(\"error in vote function\"));\r\n                            } else {\r\n                                db.collection(\"questions\")\r\n                                    .doc(id)\r\n                                    .collection(\"answersList\")\r\n                                    .doc(answerId)\r\n                                    .update({\r\n                                        vote: snapshot.data().vote + voteCount,\r\n                                        peopleWhoUpVoted: firebase.firestore.FieldValue.arrayUnion(\r\n                                            user?.email\r\n                                                ? user?.email\r\n                                                : \"Something wrong with firebase apis\"\r\n                                        ),\r\n                                        peopleWhoDownVoted:\r\n                                            firebase.firestore.FieldValue.arrayRemove(user?.email),\r\n                                    })\r\n                                    .then((resp) => console.log(\"success in vote fucntion\"))\r\n                                    .catch((error) => console.log(\"error in vote function\"));\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }).then(changingState => {\r\n                    setstateAfterVote(!stateAfterVote);\r\n                })\r\n                .catch((error) => console.log(\"Error in getting vote count.\"));\r\n        } else {\r\n            console.log(\"Please log in\");\r\n            setopenSnackbarProps(true);\r\n            setTimeout(() => {\r\n                setopenSnackbarProps(false);\r\n            }, 1000);\r\n        }\r\n    };\r\n    console.log(\"the user is, \", user);\r\n\r\n    return (\r\n        <div className=\"answerComponetn__topMainDiv\">\r\n            <div className=\"dark_greyBox\"></div>\r\n            {questionAnswerFromFB ? (\r\n                <div id=\"QA__main\">\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                            <h3>{questionAnswerFromFB?.question}</h3>\r\n                            <div className=\"icons__QA\">\r\n                                <IconButton aria-label=\"share\" onClick={handleClickOpen}>\r\n                                    <BorderColorIcon fontSize=\"large\" />\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"share\">\r\n                                    <MoreHorizIcon fontSize=\"large\" />\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className=\"dark_greyBox\">\r\n                                <span className=\"noOfAns\">\r\n                                    {answerListsOfQuestions?.length\r\n                                        ? answerListsOfQuestions?.length + \" Answers\"\r\n                                        : \"Be the first to reply.🖊\"}\r\n                                </span>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        {answerListsOfQuestions?.length > 0 ? <Grid item xs={12} sm={12} md={8} lg={8}>\r\n                            {answerListsOfQuestions?.map((docData, i) => (\r\n                                <div className=\"qa__mainDiv\" key={i}>\r\n                                    <div className=\"avatarAndids\">\r\n                                        <ListItemAvatar>\r\n                                            <Avatar alt=\"Profile Picture\" src={\"\"} />\r\n                                        </ListItemAvatar>\r\n                                        <div className=\"avatarAndids__innner\">\r\n                                            <strong>\r\n                                                {docData?.data?.answeredBy\r\n                                                    ? docData?.data?.answeredBy\r\n                                                    : \"Anonymous\"}\r\n                                            </strong>\r\n                                            <span>\r\n                                                {docData?.data?.date.toDate().toLocaleString()}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {!seeMoreState && (\r\n                                        <div className=\"inner__answer\">\r\n                                            {docData?.data?.answer &&\r\n                                                docData?.data?.answer.length >= 200 && (\r\n                                                    <div className=\"answer__seeMore\">\r\n                                                        <p>{docData?.data?.answer.slice(0, 200) + \"...\"}</p>{\" \"}\r\n                                                        <span\r\n                                                            className=\"seeMoreAnswer__span\"\r\n                                                            onClick={(e) => setSeeMoreState(!seeMoreState)}\r\n                                                        >\r\n                                                            see more\r\n                                                        </span>\r\n                                                    </div>\r\n                                                )}\r\n                                            {docData?.data?.answer &&\r\n                                                docData?.data?.answer.length < 200 && (\r\n                                                    <p>{docData?.data?.answer.slice(0, 200)} </p>\r\n                                                )}\r\n                                        </div>\r\n                                    )}\r\n                                    {seeMoreState && (\r\n                                        <div className=\"inner__answer\">\r\n                                            {docData?.data?.answer && (\r\n                                                <div div className=\"answer__seeMore\">\r\n                                                    <p>{docData?.data?.answer} </p>{\" \"}\r\n                                                    <span\r\n                                                        className=\"seeMoreAnswer__span\"\r\n                                                        onClick={(e) => setSeeMoreState(!seeMoreState)}\r\n                                                    >\r\n                                                        see less\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div className=\"qa__footer\">\r\n                                        <div id=\"oneIcon__collection\">\r\n                                            <IconButton\r\n                                                onClick={(e) => voteAnswer(docData?.data.id, 1)}\r\n                                                aria-label=\"share\"\r\n                                            >\r\n                                                <ArrowUpwardIcon\r\n                                                    color={\r\n                                                        docData?.data?.vote > 0 ? \"secondary\" : \"inherit\"\r\n                                                    }\r\n                                                />{\" \"}\r\n                                                {docData?.data?.vote >= 0 && (\r\n                                                    <span className=\"icon__p\">\r\n                                                        {docData?.data?.vote ? docData?.data?.vote : 0}\r\n                                                    </span>\r\n                                                )}\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                onClick={(e) => voteAnswer(docData?.data.id, -1)}\r\n                                                aria-label=\"share\"\r\n                                            >\r\n                                                <ArrowDownwardIcon\r\n                                                    color={\r\n                                                        docData?.data?.vote < 0 ? \"secondary\" : \"inherit\"\r\n                                                    }\r\n                                                />{\" \"}\r\n                                                {docData?.data?.vote < 0 && (\r\n                                                    <span className=\"icon__p\">{docData?.data.vote} </span>\r\n                                                )}\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <Button size=\"small\" color=\"secondary\" disabled={true} >\r\n                                            Reply.\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"dark_greyBox\"></div>\r\n                                </div>\r\n                            ))}\r\n                        </Grid> : <p className=\"no__answers\">No Answers Available at the moment.</p>}\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <div className=\"skeleton__div\">\r\n                    <Skeleton variant=\"rect\" width=\"80vw\" height=\"30vh\" />\r\n                </div>\r\n            )}\r\n\r\n            {/* Form  Popup for a Question */}\r\n            <div>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    {/* <DialogTitle id=\"form-dialog-title\">Ask me a question and I will answer it in a thread below.</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText>Answer it only if you know.</DialogContentText>\r\n                        <TextField\r\n                            multiline\r\n                            rows={7}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Answer =>\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={answer}\r\n                            onChange={(e) => setanswer(e.target.value)}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={checkedBox} onChange={e => setCheckedBox(!checkedBox)} name=\"checkedA\" />}\r\n                            label=\"Anonymous\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        {\r\n                            <Button\r\n                                onClick={sendAnswerToFirebase}\r\n                                color=\"primary\"\r\n                                disabled={!answer}\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            <SnackBarComponent open={openSnackbarProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnswerComponent;\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, HashRouter } from \"react-router-dom\";\nimport HomePageComponent from \"./Components/HomePageComponent\";\nimport FreshiesMainComponents from \"./Components/FreshiesMainComponents/FreshiesMainComponents\";\nimport ClassifiedHomePageComponent from \"./Components/Classified/ClassifiedHomePageComponent\";\nimport Login from \"./Components/Login And Logout/Login\";\nimport SignUp from \"./Components/Login And Logout/SignUp\";\nimport ListNews from './Components/ListNews'\nimport HeaderComponent from \"./Components/HeaderComponent\";\nimport ClassifiedProductView from \"./Components/Classified/ClassifiedProductView\";\nimport FooterComponent from \"./Components/Footer/FooterComponent\";\nimport AnswerComponent from \"./Components/AskQuestion/AnswerComponent\";\nimport firebase from \"firebase\"\nimport \"./App.css\";\n\nfunction App() {\n\tdocument.title = \"Jwerk Abundance\"\n\tuseEffect(() => {\n\t\tfirebase.analytics().logEvent(\"User is in App Componen\")\n\t\treturn () => {\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<div style={{ width: \"100%\", marginRight: \"auto\" }}>\n\n\n\t\t\t\t\t{/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n\n\t\t\t\t\t<HashRouter>\n\n\t\t\t\t\t\t<Route exact path=\"/Freshies\">\n\t\t\t\t\t\t\t<FreshiesMainComponents />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/Classified\">\n\t\t\t\t\t\t\t<HeaderComponent />\n\t\t\t\t\t\t\t<ClassifiedHomePageComponent />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/Login\">\n\t\t\t\t\t\t\t<HeaderComponent />\n\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/SignUp\">\n\t\t\t\t\t\t\t<HeaderComponent />\n\t\t\t\t\t\t\t<SignUp />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/Classified/Products/:id\">\n\t\t\t\t\t\t\t<HeaderComponent />\n\t\t\t\t\t\t\t<ClassifiedProductView />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/Answers/:id\">\n\t\t\t\t\t\t\t<HeaderComponent />\n\t\t\t\t\t\t\t<AnswerComponent />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<HeaderComponent />\n\t\t\t\t\t\t\t<HomePageComponent />\n\t\t\t\t\t\t\t<FooterComponent />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</HashRouter>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}