{"version":3,"sources":["Firebase/Firebase.js","Components/SnackBar/SnackBarComponent.js","Components/ContextComponent.js","Components/AskQuestion/AskMeAQuestionComponent.js","Components/HomePageComponent.js","Components/Classified/ClassifiedHomePageComponent.js","Components/Login And Logout/Login.js","Components/Login And Logout/ButtonWithLogoutFunctionComponent.js","Components/HeaderComponent.js","Components/Classified/MarkSoldDeleteEditOptionsComponent.js","Components/Classified/ClassifiedProductView.js","Components/Footer/FooterComponent.js","Components/AskQuestion/AnswerComponent.js","Components/Stalk/StalkComponent.js","Components/Miscellaneous/Documentation.js","Components/Miscellaneous/TermsAndCondition.js","App.js","features/counter/userSlice.js","app/store.js","serviceWorkerRegistration.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","auth","GoogleAuthProvider","microSoftAuthProvider","OAuthProvider","analytics","SnackBarComponent","open","React","useState","setOpenSnackbar","handleCloseSnackbar","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","IconButton","size","aria-label","color","onClick","fontSize","userContext","createContext","HomePageComponentsToSync","useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","formControl","minWidth","AskMeAQuestionComponent","user","classes","useContext","stateForHomePageTwoNestedCompToSync","setStateForHomePageTwoNestedCompToSync","FilterTag","setFilterTag","noDoubleSUbmitCLick","setnoDoubleSUbmitCLick","id","data","question","answer","questionAnswerFromFB","setquestionAnswerFromFB","stateAfterQuestionSubmit","setstateAfterQuestionSubmit","firebaseSeachQuery","setFirebaseSeachQuery","clickResetFilter","orderAnswerBy","setOrderAnswerBy","filterAnswerByType","setfilterAnswerByType","widthScreen","window","innerWidth","setOpen","handleClose","setquestion","useSnackBarState","setUseSnackBarState","noOfQuestionToShow","setNoOfQuestionToShow","lastVisible","setLastVisible","useEffect","type","order","collection","orderBy","limit","get","then","snapshot","vis","docs","length","map","doc","key","catch","error","console","log","scrollTo","document","body","scrollHeight","FormControl","className","InputLabel","Select","labelId","value","onChange","e","target","where","changeTypeFilter","MenuItem","changeOrderAnswer","TextField","style","flex","label","startAt","toUpperCase","endAt","toLowerCase","firebaseFulltextSearch","Button","disabled","startIcon","Paper","square","Typography","variant","List","query","to","ListItem","button","answered","ListItemText","primary","slice","secondary","vote","startAfter","lastVis","prev","seeMore","Fab","Dialog","aria-labelledby","DialogContent","DialogContentText","multiline","rows","autoFocus","fullWidth","handlesetErrorForMaxCharInput","inputProps","maxLength","minLength","required","placeholder","DialogActions","add","date","Date","uuidv4","questionPostedby","email","tag","noOfAnswers","emailUsedToAnswerSavedForSecurityPurpose","answeredBy","peopleWhoVoted","unVote","userEmailVerified","emailVerified","userDisplayName","displayName","uid","setTimeout","HomePageComponent","state","Provider","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","selectEmpty","marginTop","typography","extendedIcon","marginRight","ClassifiedHomePageComponent","userDetailsFirebase","productFromFirebase","setproductFromFirebase","nameofProduct","setnameofProduct","producttype","setproducttype","productCondition","setproductCondition","productImage","setproductImage","productPrice","setproductPrice","productDescription","setproductDescription","whatsAppNo","setWhatsAppNo","errorMessgae","seterrorMessgae","history","useHistory","paymentOptions","setpaymentOptions","setpopUpText","stateAfterSubmit","setstateAfterSubmit","logEvent","onSnapshot","imagehandleChange","a","files","index","image","img","uploadFileAndGetDownloadURL","ref","put","snap","getDownloadURL","downloadURL","sendImageToFirebase","promises","forEach","i","storage","child","Math","random","push","all","urlsArray","idGeneratedforProduct","set","name","price","category","productDetails","imageURL","userEmail","like","peopleWhoLiked","disLike","addLikeToFirebase","numToAdd","includes","update","FieldValue","arrayRemove","merge","arrayUnion","handleClickSnackbar","expanded","setExpanded","openSnackbar","DialogTitle","multiple","accept","htmlFor","Input","startAdornment","InputAdornment","Grid","container","item","xs","sm","md","lg","Card","CardHeader","Avatar","title","toDate","toLocaleString","CardMedia","CardContent","component","markedAsSold","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Skeleton","width","Login","setemail","wrongCredentialsInLogin","setwrongCredentialsInLogin","buttonDisable","setButtonDisable","linkVerificationEmail","setLinkVerificationEmail","onAuthStateChanged","sendSignInLinkToEmail","url","handleCodeInApp","localStorage","setItem","code","preventDefault","signInWithRedirect","result","signInWithGoogleAuth","src","alt","signInWithMicrosoftAuth","StyledMenu","withStyles","border","props","Menu","elevation","getContentAnchorEl","transformOrigin","StyledMenuItem","main","common","white","CustomizedMenus","anchorEl","setAnchorEl","currentTarget","aria-controls","aria-haspopup","keepMounted","Boolean","signOut","signOutOfFirebase","ListItemIcon","HeaderComponent","userStatus","SplitButton","emailOfProductOwner","idOfProduct","soldOrNot","statusOfItemMarkedAsSold","setStatusOfItemMarkedAsSold","productEditedInMArkSoldComponent","setProductEditedInMArkSoldComponent","options","anchorRef","useRef","selectedIndex","setSelectedIndex","current","contains","stateAfterSubmitClick","setStateAfterSubmitClick","openDialog","setopenDialog","handleCloseDialog","useParams","getDateForFormFromFB","direction","alignItems","ButtonGroup","undefined","prevOpen","Popper","role","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","option","selected","delete","response","handleMenuItemClick","res","ClassifiedProductView","productDataFromFirebase","setproductDataFromFirebase","exists","imageIndex","setImageIndex","setNewImage","textTransform","href","fontWeight","FooterComponent","AnswerComponent","answerListsOfQuestions","setanswerListsOfQuestions","stateAfterAnswerSubmit","setstateAfterAnswerSubmit","stateAfterAnswerDelete","setStateAfterAnswerDelete","updateAfterSendingLike","setupdateAfterSendingLike","openSnackbarProps","setopenSnackbarProps","seeMoreState","setSeeMoreState","checkedBox","setCheckedBox","questionId","setquestionId","stateAfterVotingQuestion","setStateAfterVotingQuestion","setanswer","increment","setOpenDialog","voteQuestion","nthg","display","flexDirection","docData","ListItemAvatar","cursor","div","idToDel","emailofAnswer","FormControlLabel","control","Checkbox","checked","idInnerCollection","replies","peopleWhoDownVoted","peopleWhoUpVoted","StalkComponent","userName","setUserName","jacobsUserProfile","setJacobsUserProfile","errorInFetchingDetails","setErrorInFetchingDetails","submitUserName","axios","Object","entries","noValidate","autoComplete","placeItems","object","Documentation","TermsAndCondition","App","setState","isSignInWithEmailLink","location","getItem","signInWithEmailLink","removeItem","prompt","emailVerification","userObj","photoURL","exact","path","userSlice","createSlice","initialState","pack","reducers","setUsername","payload","logout","actions","configureStore","reducer","userReducer","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","store","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.58a60d8a.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\r\n// import * as firebase from \"firebase/app\"\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCswzyYaAcS5nDSvl7ybRRhuM1wZcyOCWc\",\r\n    authDomain: \"jwork-4d8dc.firebaseapp.com\",\r\n    projectId: \"jwork-4d8dc\",\r\n    storageBucket: \"jwork-4d8dc.appspot.com\",\r\n    messagingSenderId: \"556572034928\",\r\n    appId: \"1:556572034928:web:c33f35bba235fe2401f1b5\",\r\n    measurementId: \"G-2XSB9M96P3\"\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().enablePersistence()\r\n//     .catch((err) => {\r\n//         if (err.code == 'failed-precondition') {\r\n//             console.log(\"firebase caching failed\");\r\n//             // Multiple tabs open, persistence can only be enabled\r\n//             // in one tab at a a time.\r\n//             // ...\r\n//         } else if (err.code == 'unimplemented') {\r\n//             console.log(\"firebase caching failed\");\r\n\r\n//             // The current browser does not support all of the\r\n//             // features required to enable persistence\r\n//             // ...\r\n//         }\r\n//     });\r\n// S\r\n\r\n\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth()\r\n// const storage = firebase.storage()\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst microSoftAuthProvider = new firebase.auth.OAuthProvider('microsoft.com');\r\n// analytics\r\nconst analytics = firebase.analytics()\r\n\r\n\r\nexport { provider, db, auth, microSoftAuthProvider, analytics }","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SnackBarComponent = ({ open }) => {\r\n\r\n    // Snackbar setups\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const handleClickSnackbar = () => {\r\n        setOpenSnackbar(true);\r\n    };\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n                message=\"Please Login\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnackBarComponent\r\n","import { createContext } from \"react\";\r\n\r\nexport const userContext = createContext(null)\r\nexport const HomePageComponentsToSync = createContext(null)","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { db } from \"../../Firebase/Firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport firebase from \"firebase\";\r\nimport SnackBarComponent from \"../SnackBar/SnackBarComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { HomePageComponentsToSync } from \"../ContextComponent\";\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\n\r\nimport \"./AskMeAQuestionComponent.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n        paddingBottom: 50,\r\n    },\r\n    list: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        top: \"auto\",\r\n        bottom: 0,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: \"absolute\",\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: \"0 auto\",\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nconst AskMeAQuestionComponent = ({ user }) => {\r\n\r\n    // const [user, setUser] = useState(state);\r\n    // console.log(\"state in ask me\", user);\r\n    const classes = useStyles();\r\n    // use-context stuffs\r\n    const {\r\n        stateForHomePageTwoNestedCompToSync,\r\n        setStateForHomePageTwoNestedCompToSync,\r\n    } = useContext(HomePageComponentsToSync);\r\n    const [FilterTag, setFilterTag] = React.useState(\"\"); //checkbox\r\n    // extra state to not allow double clicking of submit\r\n    const [noDoubleSUbmitCLick, setnoDoubleSUbmitCLick] = useState(false);\r\n    const [questionAnswerFromFB, setquestionAnswerFromFB] = useState([\r\n        {\r\n            id: 1,\r\n            data: {\r\n                question: \"What are the three Guṇas(elements)?\",\r\n                answer:\r\n                    \"The three gunas are called: sattva (goodness, calmness, harmonious), rajas (passion, activity, movement), and tamas (ignorance, inertia, laziness). \",\r\n            },\r\n        },\r\n    ]);\r\n    const [stateAfterQuestionSubmit, setstateAfterQuestionSubmit] =\r\n        useState(false);\r\n    const [firebaseSeachQuery, setFirebaseSeachQuery] = useState(\"\")\r\n    const [clickResetFilter, setClickResetFilter] = useState(false)\r\n    const [orderAnswerBy, setOrderAnswerBy] = useState(\"Date:Latest\");\r\n    const [filterAnswerByType, setfilterAnswerByType] = useState(\"\");\r\n    // const [widthScreen, setWidthScreen] = useState(document.body.clientWidth)\r\n    var widthScreen = window.innerWidth\r\n\r\n    // all setup for Form Dialog Box\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setquestion(\"\");\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setquestion(\"\");\r\n    };\r\n\r\n    // send question to firebase\r\n    const [useSnackBarState, setUseSnackBarState] = useState(false);\r\n    const sendQuestionToFirebase = () => {\r\n        setstateAfterQuestionSubmit(true);\r\n        if (user) {\r\n            setnoDoubleSUbmitCLick(!noDoubleSUbmitCLick);\r\n            db.collection(\"questions\")\r\n                .add({\r\n                    question: question,\r\n                    date: new Date(),\r\n                    answered: false,\r\n                    id: uuidv4(),\r\n                    questionPostedby: user?.email,\r\n                    vote: 0,\r\n                    tag: FilterTag,\r\n                    noOfAnswers: 0,\r\n                    emailUsedToAnswerSavedForSecurityPurpose: user?.email,\r\n                    answeredBy: user?.email,\r\n                    peopleWhoVoted: [\"ds@gmial.com\", \"djs.com\"],\r\n                    unVote: 0,\r\n                    userEmailVerified: user.emailVerified,\r\n                    userDisplayName: user?.displayName,\r\n                    uid: user.uid\r\n                })\r\n                .then((doc) => {\r\n                    setStateForHomePageTwoNestedCompToSync(\r\n                        !stateForHomePageTwoNestedCompToSync\r\n                    );\r\n                    setOpen(false);\r\n                    setquestion(\"\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error while sending question to FB\", error);\r\n                    setOpen(false);\r\n                });\r\n        } else {\r\n            setUseSnackBarState(!useSnackBarState);\r\n            setTimeout(() => {\r\n                setUseSnackBarState(false);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n\r\n    const [noOfQuestionToShow, setNoOfQuestionToShow] = useState(25)\r\n\r\n    const [lastVisible, setLastVisible] = useState(\"\")\r\n    // fetching questions and answers + checking user state\r\n    useEffect(() => {\r\n        if (orderAnswerBy === \"Date:Oldest\") {\r\n            var type = \"date\"\r\n            var order = \"asc\"\r\n        } else if (orderAnswerBy === \"Date:Latest\") {\r\n            type = \"date\"\r\n            order = \"desc\"\r\n        } else if (orderAnswerBy === \"Votes:Highest\") {\r\n            type = \"vote\"\r\n            order = \"desc\"\r\n        } else if (orderAnswerBy === \"Votes:Lowest\") {\r\n            type = \"vote\"\r\n            order = \"asc\"\r\n        } else if (orderAnswerBy === \"Replies:Max\") {\r\n            type = \"Vote\"\r\n            order = \"asc\"\r\n        }\r\n\r\n        db.collection(\"questions\")\r\n            .orderBy(type, order)\r\n            .limit(noOfQuestionToShow)\r\n            .get()\r\n            .then((snapshot) => {\r\n                const vis = snapshot.docs[snapshot.docs.length - 1]\r\n                setLastVisible(vis)\r\n                setquestionAnswerFromFB(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        key: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n\r\n\r\n        // scroll to bottom of question if noOfQuestionToShow is more than 25\r\n        if (noOfQuestionToShow > 25) {\r\n            window.scrollTo(0, document.body.scrollHeight)\r\n        }\r\n\r\n\r\n        // firebase.auth().onAuthStateChanged((userState) => {\r\n        //     if (userState) {\r\n        //         setUser(userState);\r\n        //     } else {\r\n        //         setUser(undefined);\r\n        //     }\r\n        // });\r\n\r\n        return () => { };\r\n    }, [stateForHomePageTwoNestedCompToSync, clickResetFilter, orderAnswerBy]);\r\n\r\n\r\n\r\n    // setting question checking for more than 120 chars\r\n    const [question, setquestion] = useState(\"\");\r\n    const [ErrorForMaxCharInput, setErrorForMaxCharInput] = useState(false);\r\n    const handlesetErrorForMaxCharInput = (e) => {\r\n        setquestion(e.target.value);\r\n\r\n    };\r\n\r\n    // setup for  filter\r\n    const clearFilter = () => {\r\n        setOrderAnswerBy(\"\");\r\n        setfilterAnswerByType(\"\");\r\n        setFirebaseSeachQuery(\"\")\r\n        // setClickResetFilter(!clickResetFilter)\r\n\r\n    };\r\n\r\n    const changeTypeFilter = (e) => {\r\n        setfilterAnswerByType(e.target.value);\r\n        if (e.target.value) {\r\n            db.collection(\"questions\")\r\n                .where(\"tag\", \"==\", e.target.value)\r\n                .orderBy(\"date\", 'desc')\r\n                .limit(noOfQuestionToShow)\r\n                .get()\r\n                .then((snapshot) => {\r\n                    console.log(filterAnswerByType);\r\n                    setquestionAnswerFromFB(\r\n                        snapshot.docs.map((doc) => ({\r\n                            id: doc.id,\r\n                            key: doc.id,\r\n                            data: doc.data(),\r\n                        }))\r\n                    );\r\n                })\r\n                .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n\r\n\r\n            // scroll to bottom of question if noOfQuestionToShow is more than 25\r\n            if (noOfQuestionToShow > 25) {\r\n                window.scrollTo(0, document.body.scrollHeight)\r\n            }\r\n\r\n        }\r\n    };\r\n    const changeOrderAnswer = (e) => {\r\n        setOrderAnswerBy(e.target.value);\r\n    };\r\n\r\n    // get more question after clicking on see more\r\n    const seeMore = (e) => {\r\n        setNoOfQuestionToShow(noOfQuestionToShow + 25)\r\n\r\n        if (orderAnswerBy === \"Date:Oldest\") {\r\n            var type = \"date\"\r\n            var order = \"asc\"\r\n        } else if (orderAnswerBy === \"Date:Latest\") {\r\n            type = \"date\"\r\n            order = \"desc\"\r\n        } else if (orderAnswerBy === \"Votes:Highest\") {\r\n            type = \"vote\"\r\n            order = \"desc\"\r\n        } else if (orderAnswerBy === \"Votes:Lowest\") {\r\n            type = \"vote\"\r\n            order = \"asc\"\r\n        } else if (orderAnswerBy === \"Replies:Max\") {\r\n            type = \"Vote\"\r\n            order = \"asc\"\r\n        }\r\n\r\n        if (lastVisible) {\r\n            db.collection(\"questions\")\r\n                .orderBy(type, order)\r\n                .startAfter(lastVisible)\r\n                .limit(noOfQuestionToShow)\r\n                .get()\r\n                .then((snapshot) => {\r\n                    var lastVis = snapshot.docs[snapshot.docs.length - 1]\r\n                    setLastVisible(lastVis)\r\n                    setquestionAnswerFromFB(prev => [...prev, ...snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        key: doc.id,\r\n                        data: doc.data(),\r\n                    }))]\r\n\r\n                    );\r\n                })\r\n                .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n        }\r\n\r\n\r\n\r\n        // scroll to bottom of question if noOfQuestionToShow is more than 25\r\n        if (noOfQuestionToShow > 25) {\r\n            window.scrollTo(0, document.body.scrollHeight)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // firebase Full text search\r\n    const firebaseFulltextSearch = (e) => {\r\n        setFirebaseSeachQuery(e.target.value)\r\n\r\n        db.collection(\"questions\")\r\n            .orderBy(\"question\")\r\n            .startAt(firebaseSeachQuery.toUpperCase())\r\n            .endAt(firebaseSeachQuery.toLowerCase() + \"~\")\r\n            .limit(25)\r\n            .get()\r\n            .then((snapshot) => {\r\n                // snapshot.docs.map(docs => {\r\n                //     console.log(\"ujjwal sanpshot, \", docs.data());\r\n                // })\r\n                setquestionAnswerFromFB(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        key: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                );\r\n            })\r\n            .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n    }\r\n\r\n    return (\r\n        <div id=\"main__appbar\">\r\n            <div id=\"filter__search\">\r\n                <div>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Tags</InputLabel>\r\n                        <Select\r\n\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={filterAnswerByType}\r\n                            onChange={(e) => {\r\n                                changeTypeFilter(e)\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"CS/RIS\"}>CS/RIS</MenuItem>\r\n                            <MenuItem value={\"Math\"}>Math</MenuItem>\r\n                            <MenuItem value={\"Programming\"}>Programming</MenuItem>\r\n                            <MenuItem value={\"Courses\"}>Courses</MenuItem>\r\n                            <MenuItem value={\"Resources\"}>Resources</MenuItem>\r\n                            <MenuItem value={\"Tips\"}>Tips</MenuItem>\r\n                            <MenuItem value={\"Academic\"}>Academic</MenuItem>\r\n                            <MenuItem value={\"Job/Internship\"}>Job/Internship</MenuItem>\r\n                            <MenuItem value={\"Krupp\"}>Krupp</MenuItem>\r\n                            <MenuItem value={\"Nordmetall\"}>Nordmetall</MenuItem>\r\n                            <MenuItem value={\"College3\"}>College3</MenuItem>\r\n                            <MenuItem value={\"Mercator\"}>Mercator</MenuItem>\r\n                            <MenuItem value={\"Housing\"}>Housing</MenuItem>\r\n                            <MenuItem value={\"Party/Holiday\"}>Party/Holiday</MenuItem>\r\n                            <MenuItem value={\"Faculty\"}>Faculty</MenuItem>\r\n                            <MenuItem value={\"Admission\"}>Admission</MenuItem>\r\n                            <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Order By</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={orderAnswerBy}\r\n                            onChange={(e) => changeOrderAnswer(e)}\r\n                        >\r\n                            <MenuItem value={\"Votes:Highest\"}>Votes:Highest</MenuItem>\r\n                            <MenuItem value={\"Votes:Lowest\"}>Votes:Lowest</MenuItem>\r\n                            <MenuItem value={\"Date:Latest\"}>Date:Latest</MenuItem>\r\n                            <MenuItem value={\"Date:Oldest\"}>Date:Oldest</MenuItem>\r\n                            <MenuItem value={\"Replies:Max\"}>No of replies:Max</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className=\"text-search-firebase\" >\r\n                    <form className=\"text-search-firebase-form\" >\r\n                        <TextField style={{ flex: \"1\" }} id=\"text-search-firebase-form-textfield\" label=\"Search questions\"\r\n                            value={firebaseSeachQuery} onChange={e => firebaseFulltextSearch(e)} />\r\n                        <Button\r\n                            disabled={true}\r\n                            className=\"text-search-firebase-form-button\"\r\n                            startIcon={<RotateLeftIcon />}\r\n                            onClick={e => clearFilter(e)}\r\n                        >\r\n                            reset\r\n                        </Button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"appBAr\">\r\n                <Paper square className={classes.paper}>\r\n                    <Typography className={classes.text} variant=\"h6\">\r\n                        Ask a Question.\r\n                    </Typography>\r\n\r\n                    <List className={classes.list}>\r\n                        {questionAnswerFromFB.map((query) => (\r\n                            <React.Fragment key={query.id}>\r\n                                <Link\r\n                                    to={\"/Answers/\" + query.id}\r\n                                    className=\"link__newsDecoration\"\r\n                                >\r\n                                    <ListItem button>\r\n                                        {/* <ListItemAvatar>\r\n                                            <Avatar alt=\"Profile Picture\" src={\"\"} />\r\n                                        </ListItemAvatar> */}\r\n\r\n                                        {/* smaller screen */}\r\n                                        {!query.data?.answered && widthScreen < 800 && (\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    query.data?.question.length < 200\r\n                                                        ? query.data?.question\r\n                                                        : query.data?.question.slice(0, 200) + \".....\"\r\n                                                }\r\n                                                secondary={<> \"No answer available at the moment.\" 💓<sup>{query.data?.vote} </sup>  </>}\r\n                                            />\r\n                                        )}\r\n                                        {query.data?.answered && widthScreen < 800 && (\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    query.data?.question.length < 200\r\n                                                        ? query.data?.question\r\n                                                        : query.data?.question.slice(0, 200) + \".....\"\r\n                                                }\r\n                                                secondary={<span>\"Click to view replies.\" 💓<sup>{query.data?.vote}</sup></span>}\r\n                                            />\r\n                                        )}\r\n\r\n                                        {/* larger screen */}\r\n                                        {!query.data?.answered && widthScreen > 800 && (\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    query.data?.question.slice(0, 500)\r\n                                                }\r\n                                                secondary={<p> \"No answer available at the moment.\" 💓<sup>{query.data?.vote} </sup>  </p>}\r\n                                            />\r\n                                        )}\r\n                                        {query.data?.answered && widthScreen > 800 && (\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    query.data?.question.slice(0, 500)\r\n                                                }\r\n                                                secondary={<span>\"Click to view replies.\" 💓<sup>{query.data?.vote}</sup></span>}\r\n                                            />\r\n                                        )}\r\n                                    </ListItem>\r\n                                </Link>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        {questionAnswerFromFB.length % 25 === 0 && questionAnswerFromFB.length !== 0 ?\r\n                            <div id='seemoreQuestions'>\r\n                                <p onClick={e => seeMore(e)} >Load more</p>\r\n                            </div> : <></>\r\n                        }\r\n\r\n                    </List>\r\n\r\n                    <br />\r\n                    <br />\r\n                </Paper>\r\n            </div>\r\n            <div>\r\n                <div className=\"plus-fav\" >\r\n                    <Fab\r\n                        color=\"secondary\"\r\n                        aria-label=\"add\"\r\n                        className={classes.fabButton}\r\n                        onClick={(e) => handleClickOpen()}\r\n                    >\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Form  Popup for a Question */}\r\n            <div>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={(e) => handleClose()}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    {/* <DialogTitle id=\"form-dialog-title\">Ask me a question and I will answer it in a thread below.</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ask us a question and we will answer it in a thread below.\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            multiline\r\n                            rows={7}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Question?(20-500 characters)*\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={question}\r\n                            onChange={(e) => handlesetErrorForMaxCharInput(e)}\r\n                            inputProps={{\r\n                                maxLength: 500,\r\n                                minLength: 100,\r\n                                required: true,\r\n                                placeholder: \"Put your question here.\",\r\n                            }}\r\n                        />\r\n                        {/* checkbox div for filtering */}\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">#Tag</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={FilterTag}\r\n                                onChange={(e) => setFilterTag(e.target.value)}\r\n                            >\r\n                                <MenuItem value={\"CS/RIS\"}>CS/RIS</MenuItem>\r\n                                <MenuItem value={\"Math\"}>Math</MenuItem>\r\n                                <MenuItem value={\"Programming\"}>Programming</MenuItem>\r\n                                <MenuItem value={\"Courses\"}>Courses</MenuItem>\r\n                                <MenuItem value={\"Resources\"}>Resources</MenuItem>\r\n                                <MenuItem value={\"Tips\"}>Tips</MenuItem>\r\n                                <MenuItem value={\"Academic\"}>Academic</MenuItem>\r\n                                <MenuItem value={\"Job/Internship\"}>Job/Internship</MenuItem>\r\n                                <MenuItem value={\"Krupp\"}>Krupp</MenuItem>\r\n                                <MenuItem value={\"Nordmetall\"}>Nordmetall</MenuItem>\r\n                                <MenuItem value={\"College3\"}>College3</MenuItem>\r\n                                <MenuItem value={\"Mercator\"}>Mercator</MenuItem>\r\n                                <MenuItem value={\"Housing\"}>Housing</MenuItem>\r\n                                <MenuItem value={\"Party/Holiday\"}>Party/Holiday</MenuItem>\r\n                                <MenuItem value={\"Faculty\"}>Faculty</MenuItem>\r\n                                <MenuItem value={\"Admission\"}>Admission</MenuItem>\r\n                                <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    {/* {ErrorForMaxCharInput && <p>No more than 200 chars allowed</p>} */}\r\n                    <DialogActions>\r\n                        <Button onClick={(e) => handleClose()} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            onClick={(e) => sendQuestionToFirebase(e)}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                stateAfterQuestionSubmit || question?.length < 20 || !FilterTag\r\n                            }\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            <SnackBarComponent open={useSnackBarState} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AskMeAQuestionComponent;\r\n","import React, { useEffect, useState } from 'react'\r\nimport AskMeAQuestionComponent from \"./AskQuestion/AskMeAQuestionComponent\"\r\nimport { HomePageComponentsToSync } from \"./ContextComponent\"\r\nimport './HomePageComponent.css'\r\n\r\nconst HomePageComponent = ({ state }) => {\r\n    const [stateForHomePageTwoNestedCompToSync, setStateForHomePageTwoNestedCompToSync] = useState(false)\r\n\r\n    return (\r\n        <HomePageComponentsToSync.Provider value={{ stateForHomePageTwoNestedCompToSync, setStateForHomePageTwoNestedCompToSync }}>\r\n            <div id=\"homepage__main\">\r\n                {/* the below is question ask topappbar */}\r\n                <div className=\"bottomBar__main\">\r\n                    <AskMeAQuestionComponent user={state} />\r\n                </div>\r\n                {/* the below is grid in main homepage */}\r\n                {/* <div className=\"tets\" id=\"tets__id\">\r\n                    <ListNews />\r\n                </div> */}\r\n            </div>\r\n        </HomePageComponentsToSync.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default HomePageComponent\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { db } from \"../../Firebase/Firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormControl, Input, InputAdornment, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FavoriteBorderOutlined from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport EuroIcon from '@material-ui/icons/Euro';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddShoppingCartSharpIcon from '@material-ui/icons/AddShoppingCartSharp';\r\n\r\nimport \"./ClassifiedHomePageComponent.css\";\r\n// image file resizer\r\nconst resizeFile = (file) =>\r\n    new Promise((resolve) => {\r\n        Resizer.imageFileResizer(\r\n            file,\r\n            480,\r\n            320,\r\n            \"JPEG\",\r\n            80,\r\n            0,\r\n            (uri) => {\r\n                resolve(uri);\r\n            },\r\n            \"file\"\r\n        );\r\n    });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ClassifiedHomePageComponent = ({ userDetailsFirebase }) => {\r\n    // console.log(\"state in classifed is, \", userDetailsFirebase);\r\n    // initializations\r\n    // const [userDetailsFirebase, setuserDetailsFirebase] = useState(state)\r\n\r\n    const [productFromFirebase, setproductFromFirebase] = useState(\"\")\r\n    const [nameofProduct, setnameofProduct] = useState(\"\")\r\n    const [producttype, setproducttype] = React.useState('');\r\n    const [productCondition, setproductCondition] = useState(\"\")\r\n    const [productImage, setproductImage] = useState([])\r\n    const [productPrice, setproductPrice] = useState(\"\")\r\n    const [productDescription, setproductDescription] = useState(\"\")\r\n    const [whatsAppNo, setWhatsAppNo] = useState(\"\")\r\n    const [errorMessgae, seterrorMessgae] = useState(false)\r\n    const history = useHistory()\r\n    const [paymentOptions, setpaymentOptions] = useState([])\r\n    const [popUpText, setpopUpText] = useState(\"\")\r\n    const [stateAfterSubmit, setstateAfterSubmit] = useState(true)\r\n    // console.log(\"use\", productFromFirebase[0]?.data?.date.tol);\r\n\r\n    useEffect(() => {\r\n        firebase.analytics().logEvent(\"User is in Main Classified shop Component\")\r\n        // fetching all public posts\r\n        db.collection(\"products\").orderBy(\"date\", \"desc\").onSnapshot(snapshot => {\r\n            setproductFromFirebase(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    key: doc.id,\r\n                    data: doc.data()\r\n                }\r\n                ))\r\n            )\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    // Image change handel\r\n    const imagehandleChange = async (e) => {\r\n        console.log(e.target.files.length);\r\n\r\n        if (e.target.files) {\r\n            // const files = []\r\n            for (let index = 0; index < e.target.files.length && index < 5; index++) {\r\n                try {\r\n                    const file = e.target.files[index];\r\n                    const image = await resizeFile(file);\r\n                    console.log(\"imag from resizer\", image);\r\n                    setproductImage(img => [...img, image])\r\n                } catch (err) {\r\n                    console.log(\"Error in resizing image, \", err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const uploadFileAndGetDownloadURL = async (ref, file) => {\r\n        const snap = await ref.put(file);\r\n        const downloadURL = await snap.ref.getDownloadURL();\r\n\r\n        return downloadURL;\r\n    };\r\n\r\n    const sendImageToFirebase = async (e) => {\r\n        setstateAfterSubmit(!stateAfterSubmit)\r\n        if (nameofProduct && producttype && productCondition && productPrice && productImage) {\r\n            console.log(\"Trying to send image to firebase\");\r\n            const promises = []\r\n            productImage.forEach((image, i) => {\r\n                var storageRef = firebase.storage().ref();\r\n                var ref = storageRef.child(`${userDetailsFirebase.uid}/` + Math.random())\r\n                promises.push(uploadFileAndGetDownloadURL(ref, image));\r\n            })\r\n            const res = await Promise.all(promises).then(urlsArray => {\r\n                // send details from form\r\n                if (nameofProduct && producttype && productCondition && productPrice) {\r\n                    const idGeneratedforProduct = userDetailsFirebase.uid + uuidv4()\r\n                    db.collection(\"products\").doc(idGeneratedforProduct).set(\r\n                        {\r\n                            id: idGeneratedforProduct,\r\n                            date: new Date(),\r\n                            name: nameofProduct.slice(0, 60),\r\n                            price: productPrice,\r\n                            category: producttype,\r\n                            productDetails: productCondition,\r\n                            productDescription: productDescription.slice(0, 250),\r\n                            imageURL: urlsArray,\r\n                            userEmail: userDetailsFirebase.email,\r\n                            userEmailVerified: userDetailsFirebase.emailVerified,\r\n                            userDisplayName: userDetailsFirebase.displayName,\r\n                            paymentOptions: paymentOptions,\r\n                            like: 0,\r\n                            peopleWhoLiked: [\"ds@gmial.com\", \"djs.com\"],\r\n                            disLike: 0,\r\n                            uid: userDetailsFirebase.uid,\r\n                            whatsAppNo: whatsAppNo\r\n                        },\r\n                    ).then(e => {\r\n                        // res-setting everything\r\n                        setOpen(false);\r\n                        seterrorMessgae(false)\r\n                        setstateAfterSubmit(true)\r\n                        setnameofProduct('')\r\n                        setproducttype(\"\")\r\n                        setproductCondition(\"\")\r\n                        setproductImage([])\r\n                        setproductPrice(\"\")\r\n                        setproductDescription(\"\")\r\n                        setpaymentOptions([])\r\n                    }).catch(error => console.log(\"Error while sendig items to Firebase\"))\r\n                } else {\r\n                    seterrorMessgae(true)\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    // ading like/dis-like in each products\r\n    const addLikeToFirebase = (data, numToAdd) => {\r\n        // console.log(\"id in funciton, \", data, numToAdd);\r\n        if (userDetailsFirebase) {\r\n            db.collection(\"products\").doc(data?.id).get().then(doc => {\r\n                // console.log(\"chcking array, \", doc.data().peopleWhoLiked?.includes(userDetailsFirebase?.email));\r\n                if (!doc.data().peopleWhoLiked?.includes(userDetailsFirebase?.email)) {\r\n                    db.collection(\"products\").doc(data?.id).update({\r\n                        like: ++doc.data().like,\r\n                        peopleWhoLiked: firebase.firestore.FieldValue.arrayUnion(userDetailsFirebase?.email ? userDetailsFirebase?.email : \"joke\")\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike toFirebase Funciton, \", error))\r\n                } else {\r\n                    db.collection(\"products\").doc(data?.id).update({\r\n                        like: --doc.data().like,\r\n                        peopleWhoLiked: firebase.firestore.FieldValue.arrayRemove(userDetailsFirebase?.email)\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike in -else statement- toFirebase Funciton, \", error))\r\n                }\r\n            }).catch(error => console.log(\"error in addLiketoFirebase Function, \", error))\r\n        }\r\n        else {\r\n            console.log(\"User not found while trying to send Like\");\r\n            setpopUpText(\"Please Login.\")\r\n            handleClickSnackbar()\r\n            // history.push(\"/Login\")\r\n        }\r\n\r\n    }\r\n\r\n    // setup from Material-UI for Grid container and card\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    // setup for Input dailog box from Material UI\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        if (userDetailsFirebase) {\r\n            setOpen(true);\r\n        }\r\n        else {\r\n            handleClickSnackbar()\r\n            setTimeout(() => {\r\n                history.push(\"/Login\")\r\n            }, 500);\r\n        }\r\n\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        seterrorMessgae(false)\r\n        setpaymentOptions([])\r\n    };\r\n    const handleChange = (event) => {\r\n        setproducttype(event.target.value);\r\n    };\r\n\r\n\r\n    // Snackbar setups\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const handleClickSnackbar = () => {\r\n        setOpenSnackbar(true);\r\n    };\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"test\" id=\"testinLocalCSSusingId\">\r\n            <div className=\"button\">\r\n                <div style={{ margin: \"20px 0px 0px 0px\" }}>\r\n                    <Fab variant=\"extended\" id=\"addButton\" color=\"secondary\" onClick={e => handleClickOpen(e)}>\r\n                        <AddShoppingCartSharpIcon className={classes.extendedIcon} />\r\n                        Add to Market\r\n                    </Fab>\r\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                        <DialogContent>\r\n                            {!errorMessgae && <DialogContentText >\r\n                                Please fill in the details and submit.\r\n                            </DialogContentText>}\r\n                            {errorMessgae && <DialogContentText style={{ color: \"red\" }}>\r\n                                Please fill in the required.\r\n                            </DialogContentText>}\r\n                            <TextField\r\n                                autoFocus\r\n                                required\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"Product name\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                value={nameofProduct}\r\n                                placeholder=\"Big black Ikea Drawer\"\r\n                                onChange={e => setnameofProduct(e.target.value)}\r\n                            />\r\n                            <FormControl className={classes.formControl} style={{ margin: 0 }} >\r\n                                <InputLabel id=\"demo-simple-select-label\">Category*</InputLabel>\r\n                                <Select\r\n\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={producttype}\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value={\"Automotive, Motorcycle & Industrial\"}>Automotive, Motorcycle & Industrial</MenuItem>\r\n                                    <MenuItem value={\"Furniture\"}>Furniture</MenuItem>\r\n                                    <MenuItem value={\"Apparel, Shoes & Watches\"}>Apparel, Shoes & Watches</MenuItem>\r\n                                    <MenuItem value={\"Apparel, Shoes & Watches\"}>Beauty & Health</MenuItem>\r\n                                    <MenuItem value={\"Books & Audible\"}>Books & Audible</MenuItem>\r\n                                    <MenuItem value={\"Electronics & Computers\"}>Electronics & Computers</MenuItem>\r\n                                    <MenuItem value={\"Grocery/Food\"}>Grocery/Food</MenuItem>\r\n                                    <MenuItem value={\"Home, Garden, Pets & DIY\"}>Home, Garden, Pets & DIY</MenuItem>\r\n                                    <MenuItem value={\"Movies, TV, Music & Games\"}>Movies, TV, Music & Games</MenuItem>\r\n                                    <MenuItem value={\"Other\"}>Other</MenuItem>\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br></br>\r\n                            <FormControl className={classes.formControl} style={{ margin: 0 }}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Condition*</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={productCondition}\r\n                                    onChange={e => setproductCondition(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={\"New\"}>New</MenuItem>\r\n                                    <MenuItem value={\"Used Only Once\"}>Used Only Once</MenuItem>\r\n                                    <MenuItem value={\"Used And All Parts Fine\"}>Used And All Parts Fine</MenuItem>\r\n                                    <MenuItem value={\"Used But Few Parts Not Working\"}>Used But Few Parts Not Working</MenuItem>\r\n                                    <MenuItem value={\"Contact Owner For Product Condition\"}>Contact Owner For Product Condition</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <br></br>\r\n                            <FormControl className={classes.formControl} style={{ margin: 0 }}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Payment*</InputLabel>\r\n                                <Select\r\n                                    multiple\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={paymentOptions}\r\n                                    onChange={e => setpaymentOptions(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={\"Cash\"}>Cash</MenuItem>\r\n                                    <MenuItem value={\"Sparkasse\"}>Sparkasse</MenuItem>\r\n                                    <MenuItem value={\"Paypal\"}>Paypal</MenuItem>\r\n                                    <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"description\"\r\n                                label=\"Description*\"\r\n                                type=\"text\"\r\n                                multiline\r\n                                rows={3}\r\n                                fullWidth\r\n                                value={productDescription}\r\n                                onChange={e => setproductDescription(e.target.value)}\r\n                            />\r\n                            <form style={{ color: \"rgb(112 103 103 / 87%)\" }}>\r\n                                <label id=\"fname\" className=\"product-image-text\" >Product Image*</label><br></br>\r\n                                <input type=\"file\" style={{ color: \"rgb(112 103 103 / 87%)\" }} accept=\"image/*\" multiple\r\n                                    onChange={e => imagehandleChange(e)} ></input>\r\n                                {/* <button type=\"submit\" onClick={sendImageToFirebase}>send image</button> */}\r\n                            </form>\r\n                            <FormControl className={classes.formControl} style={{ margin: 0, marginTop: \"18px\" }}>\r\n                                <InputLabel htmlFor=\"input-with-icon-adornment\" style={{ fontSize: \"22px\" }} >Price*</InputLabel>\r\n                                <Input\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <EuroIcon style={{ fontSize: \"1rem\" }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    id=\"name\"\r\n                                    label=\"Price\"\r\n                                    type=\"number\"\r\n                                    fullWidth\r\n                                    value={productPrice}\r\n                                    onChange={e => setproductPrice(e.target.value)}\r\n                                />\r\n                            </FormControl>\r\n\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"WhastsApp No.\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                value={whatsAppNo}\r\n                                placeholder=\"Big black Ikea Drawer\"\r\n                                onChange={e => setWhatsAppNo(e.target.value)}\r\n                            />\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={e => handleClose(e)} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            {stateAfterSubmit && <Button onClick={e => sendImageToFirebase(e)} color=\"primary\"\r\n                                disabled={!productImage || !nameofProduct || !nameofProduct || !producttype || !productCondition || !productPrice || !productImage}\r\n                            >\r\n                                Submit\r\n                            </Button>}\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {productFromFirebase ? <div className=\"cards__main\">\r\n                <Grid container spacing={2} >\r\n                    {productFromFirebase.map((item) => (\r\n                        <Grid className=\"grid__main\" item xs={12} sm={6} md={4} lg={4} key={Math.random()}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                            {item?.data?.userEmail.slice(0, 1).toUpperCase()}\r\n                                        </Avatar>\r\n                                    }\r\n                                    action={\r\n                                        <IconButton aria-label=\"settings\">\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    title={item.data.userEmail}\r\n                                    subheader={\"posted at \" + item.data.date.toDate().toLocaleString()}\r\n                                />\r\n                                <Link to={\"/Classified/Products/\" + item.data.id} className=\"linkTextForCard\" id=\"image__onHoverGrow\" >\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={item.data.imageURL.length > 0 ? item.data.imageURL[0] : \"https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg\"}\r\n                                        title=\"Paella dish\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography\r\n                                            variant=\"h5\"\r\n                                            color=\"textPrimary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {item?.data.name ? item?.data.name : \"NA\"}\r\n                                        </Typography>\r\n                                        <div className=\"already__sold\">\r\n                                            <Typography\r\n                                                variant=\"body2\"\r\n                                                color=\"error\"\r\n                                                component=\"p\"\r\n                                            >\r\n                                                {item?.data.productDetails ? item?.data?.productDetails + \" €\" + item?.data?.price : \"NA\"}\r\n\r\n                                            </Typography>\r\n                                            <span\r\n                                            >\r\n                                                {item?.data?.markedAsSold && <p>Already Sold😪</p>}\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {item?.data.productDescription ? item?.data.productDescription?.slice(0, 100) : \"NA\"}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Link>\r\n                                <CardActions disableSpacing>\r\n                                    {item.data?.peopleWhoLiked?.includes(userDetailsFirebase?.email) && <IconButton onClick={e => addLikeToFirebase(item?.data, -1)} aria-label=\"add to favorites\" style={{ color: \"#ed4956\" }}>\r\n                                        <FavoriteIcon />\r\n                                    </IconButton>}\r\n                                    {!item.data?.peopleWhoLiked?.includes(userDetailsFirebase?.email) && <IconButton aria-label=\"add to favorites\" onClick={e => addLikeToFirebase(item?.data, 1)}>\r\n                                        <FavoriteBorderOutlined />\r\n                                    </IconButton>}\r\n                                    {/* <IconButton aria-label=\"add to favorites\">\r\n                                        <FavoriteBorderOutlined onClick={e => addLikeToFirebase(item?.data)} />\r\n                                    </IconButton> */}\r\n                                    <IconButton aria-label=\"share\">\r\n                                        <ShareIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={e => handleExpandClick(e)}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon />\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <p className=\"like\">{item?.data?.like + \" likes\"}</p>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <Typography paragraph>Description:</Typography>\r\n                                        <Typography paragraph>\r\n                                            {item?.data?.productDescription ? item?.data?.productDescription : \"NA\"}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </div> : <div className=\"\"  ><Skeleton className=\"skeleton\" variant=\"rect\" width=\"80vw\" height=\"60vh\" /></div>\r\n            }\r\n            {/* Snackbar sub-component */}\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={openSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleCloseSnackbar}\r\n                    message=\"Please Login\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={e => handleCloseSnackbar(e)}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default ClassifiedHomePageComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { provider, microSoftAuthProvider } from \"../../Firebase/Firebase\"\r\nimport \"./Login.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n// import { Log_in } from \"./features/user/userSlice\";\r\n\r\nconst Login = () => {\r\n    const [email, setemail] = useState(\"\");\r\n    const [wrongCredentialsInLogin, setwrongCredentialsInLogin] = useState(false)\r\n    const [buttonDisable, setButtonDisable] = useState(false)\r\n    const [linkVerificationEmail, setLinkVerificationEmail] = useState(false)\r\n    const history = useHistory();\r\n    // const loginToFirebase = (e) => {\r\n    //     e.preventDefault()\r\n    //     firebase.auth().signInWithEmailAndPassword(email, password).then(userCredntials => {\r\n    //         console.log(\"User found on firebase, \", userCredntials);\r\n    //         setwrongCredentialsInLogin(false)\r\n    //         history.push(\"/\")\r\n    //     }).catch(error => {\r\n    //         console.log(\"user not found\");\r\n    //         setwrongCredentialsInLogin(true)\r\n    //     })\r\n    // }\r\n\r\n    // google sign-in authentication\r\n    const signInWithGoogleAuth = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().signInWithRedirect(provider)\r\n            .then(result => {\r\n                // console.log(\"credentials from google auth, \", result.credential)\r\n                setwrongCredentialsInLogin(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error in google sign-in authentication\", error)\r\n                setwrongCredentialsInLogin(true)\r\n            })\r\n    }\r\n    // microsoft\r\n    const signInWithMicrosoftAuth = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().signInWithRedirect(microSoftAuthProvider)\r\n            .then(result => {\r\n                // console.log(\"credentials from Microsft auth, \", result.credential)\r\n                setwrongCredentialsInLogin(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error in Microsft sign-in authentication\", error)\r\n                setwrongCredentialsInLogin(true)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.analytics().logEvent(\"User is in Login Componen\")\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                history.push('/')\r\n            } else {\r\n                console.log(\"No user logged in.\");\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const sendEmailVerificationLink = () => {\r\n\r\n        var actionCodeSettings = {\r\n            // URL you want to redirect back to. The domain (www.example.com) for this\r\n            // URL must be in the authorized domains list in the Firebase Console.\r\n            // url: 'http://localhost:3000/',\r\n            // url: \"https://khadkauj.github.io/Jwork/\",\r\n            url: \"https://jacsy.tk\",\r\n            // This must be true.\r\n            handleCodeInApp: true,\r\n            // iOS: {\r\n            //     bundleId: 'com.example.ios'\r\n            // },\r\n            // android: {\r\n            //     packageName: 'com.example.android',\r\n            //     installApp: true,\r\n            //     minimumVersion: '12'\r\n            // },\r\n            // dynamicLinkDomain: 'http://localhost:3000/'\r\n        };\r\n\r\n        if (email.slice(email.length - 20, email.length) !== \"@jacobs-university.com\") {\r\n            setButtonDisable(true)\r\n            setwrongCredentialsInLogin(false)\r\n            firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings)\r\n                .then(() => {\r\n                    console.log(\"email sent\");\r\n                    setLinkVerificationEmail(!linkVerificationEmail)\r\n                    // The link was successfully sent. Inform the user.\r\n                    // Save the email locally so you don't need to ask the user for it again\r\n                    // if they open the link on the same device.\r\n                    window.localStorage.setItem('emailForSignIn', email);\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    setButtonDisable(false)\r\n                    setwrongCredentialsInLogin(true)\r\n                    setLinkVerificationEmail(false)\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    // ...\r\n                    console.log(\"error email link send\", error);\r\n                });\r\n        } else {\r\n            setwrongCredentialsInLogin(true)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"main_div__grid\" >\r\n\r\n            <div className=\"main123\">\r\n                {/* <h1 className=\"header1\">Login</h1>\r\n                <hr className=\"hr__tag\" /> */}\r\n                {!linkVerificationEmail && <>  <h3 className=\"header3\">Welcome to Login page</h3>\r\n\r\n                    <input className=\"inp\" value={email} autoFocus\r\n                        onChange={(e) => setemail(e.target.value)} type=\"email\"\r\n                        placeholder=\"u.khadka@jacobs-university.com\" />\r\n                    {/* <input\r\n                    className=\"inp\"\r\n                    value={password}\r\n                    onChange={(e) => setpassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                /> */}\r\n                    {wrongCredentialsInLogin && <p style={{ color: \"#bb2124\" }} >Wrong credentials!!!</p>}\r\n                    <p className=\"para\">\r\n                        Password-less SignIn With College Email Address{\" \"}\r\n                        {/* <Link to=\"/SignUp\">\r\n                        <span className=\"span1\">\r\n                            <u>Register</u>\r\n                        </span>\r\n                    </Link> */}\r\n                    </p>\r\n                    <Button style={{ marginTop: \"32px\" }} variant=\"contained\" disabled={email.slice(email.length - 20, email.length) !== \"jacobs-university.de\" || buttonDisable}\r\n                        onClick={e => sendEmailVerificationLink(e)}>\r\n                        Login/Get-Link\r\n                    </Button> </>}\r\n                {linkVerificationEmail &&\r\n                    <p className=\"confirmation-link\" >An email with confirmation link has been sent to {email}.Please click on the link to safely login.</p>}\r\n                <div className=\"hrs\">\r\n                    <hr className=\"hr_line\" /> <p>or</p> <hr className=\"hr_right\" />\r\n                </div>\r\n                <button onClick={e => signInWithGoogleAuth(e)} className=\"coninueGoogle_butt\">\r\n                    <img src={process.env.PUBLIC_URL + '/google-logo.ico'} alt=\"logo\" />\r\n                    Continue With Google\r\n                </button>\r\n                <div className=\"smallBreakbetweenAuth\" ></div>\r\n                <button onClick={e => signInWithMicrosoftAuth(e)} className=\"coninueGoogle_butt\">\r\n                    <img src={process.env.PUBLIC_URL + '/m.png'} alt=\"logo\" />\r\n                    Continue With Outlook\r\n                </button>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { IconButton } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport firebase from \"firebase\"\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport \"./ButtonWithLogoutFunc.css\"\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus({ user }) {\r\n    // setup for menus\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // sign out of Firebase\r\n    const history = useHistory()\r\n    const signOutOfFirebase = (e) => {\r\n        handleClose()\r\n        e.preventDefault()\r\n        firebase.auth().signOut().then(user => {\r\n            console.log(\"user signed out\");\r\n            history.push(\"/Login\")\r\n            // setuserStatus(false)\r\n        }).catch(error => {\r\n            console.log(\"user couldn't signed out\");\r\n        })\r\n    }\r\n\r\n    const takeToLogInPage = (e) => {\r\n        handleClose()\r\n        history.push(\"/Login\")\r\n    }\r\n\r\n    const takeToDocumentation = (e) => {\r\n        handleClose()\r\n        history.push(\"/Documentation\")\r\n    }\r\n\r\n    const takeToTermsAndCondition = (e) => {\r\n        handleClose()\r\n        history.push(\"/TermsAndCondition\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleClick}>\r\n                {user ?\r\n                    <SettingsIcon\r\n                        fontSize=\"large\"\r\n                        aria-controls=\"customized-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        variant=\"contained\"\r\n\r\n\r\n                    >\r\n                        Open Menu\r\n                    </SettingsIcon>\r\n                    :\r\n                    <PersonAddIcon\r\n                        fontSize=\"large\"\r\n                        aria-controls=\"customized-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        variant=\"contained\"\r\n\r\n\r\n                    >\r\n                        Open Menu\r\n                    </PersonAddIcon>\r\n\r\n                }\r\n            </IconButton>\r\n\r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {user && <div className=\"signedAs__main\">\r\n                    <span className=\"signedAs__span\">Signed-in as</span>\r\n                    <p className=\"signedAs__email\"> {user.email}</p>\r\n                </div>}\r\n                {user ? <StyledMenuItem onClick={e => signOutOfFirebase(e)} >\r\n                    <ListItemIcon>\r\n                        <ExitToAppIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Log Out\" />\r\n                </StyledMenuItem> :\r\n                    <StyledMenuItem onClick={e => takeToLogInPage(e)} >\r\n                        <ListItemIcon>\r\n                            <ExitToAppIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Log In\" />\r\n                    </StyledMenuItem>\r\n                }\r\n                <StyledMenuItem onClick={e => takeToDocumentation(e)}  >\r\n                    <ListItemIcon>\r\n                        <BookIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Documentation/Updates\" />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={e => takeToTermsAndCondition(e)} >\r\n                    <ListItemIcon>\r\n                        <InfoIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Terms and Condition\" />\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport firebase from 'firebase';\r\nimport ButtonWithLogoutFunctionComponent from \"./Login And Logout/ButtonWithLogoutFunctionComponent\"\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"./HeaderComponent.css\"\r\n\r\nconst HeaderComponent = ({ userStatus }) => {\r\n\r\n    // const [userStatus, setuserStatus] = useState(state)\r\n    // useEffect(() => {\r\n    //     firebase.auth().onAuthStateChanged(user => {\r\n    //         if (user) {\r\n    //             user = { email: user.email }\r\n    //             setuserStatus(user)\r\n    //         } else {\r\n    //             setuserStatus(undefined)\r\n    //         }\r\n    //     })\r\n    //     return () => {\r\n\r\n    //     }\r\n    // }, [])\r\n    return (\r\n        <div className=\"router__div stickyProp\" id=\"gulla\">\r\n            <nav className=\"nav__bar\" >\r\n                {/* Home Exams* Homeworks* Notes* Classified* Contact */}\r\n                <ul className=\"ul__list\">\r\n                    <li>\r\n                        <Link to=\"/\" className=\"linkText \" style={{ color: \"#06201b\" }} >Question</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Classified\" className=\"linkText\" style={{ color: \"#06201b\" }}>Shop</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/Stalk\" className=\"linkText\" style={{ color: \"#06201b\" }}>Stalk</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"header__Icons\" id=\"singIn__button__homepage\"  >\r\n                {/* {!userStatus && <IconButton aria-label=\"Sign\" onClick={signToFirebase}  >\r\n                    <PersonAddIcon fontSize=\"large\" />\r\n                </IconButton>} */}\r\n                {/* {!userStatus &&\r\n\r\n                    <Button\r\n                        onClick={e => signToFirebase(e)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<PersonAddIcon />}\r\n                    >\r\n                        LogIn\r\n                    </Button>\r\n                }\r\n              \r\n                {userStatus && <ButtonWithLogoutFunctionComponent />} */}\r\n\r\n                <ButtonWithLogoutFunctionComponent user={userStatus} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport firebase from \"firebase\"\r\nimport { db } from '../../Firebase/Firebase';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { userContext } from '../ContextComponent';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\nimport EuroIcon from '@material-ui/icons/Euro';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SplitButton({ emailOfProductOwner, idOfProduct, soldOrNot, user }) {\r\n\r\n\r\n    const classes = useStyles();\r\n    const { statusOfItemMarkedAsSold, setStatusOfItemMarkedAsSold,\r\n        productEditedInMArkSoldComponent, setProductEditedInMArkSoldComponent } = useContext(userContext)\r\n\r\n\r\n    const options = [soldOrNot ? \"Marked as Not-Sold\" : \"Marked as Sold\", 'Edit the details', 'Delete'];\r\n    const history = useHistory()\r\n\r\n\r\n    // setup for the Button-Group toogle\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n    const handleMenuItemClick = (event, index) => {\r\n        console.log(index);\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n        // Deleting the product\r\n        if (index === 2) {\r\n            db.collection(\"products\").doc(idOfProduct).delete().then(response => {\r\n                console.log(\"Item deleted\");\r\n                history.push(\"/Classified\")\r\n            }).catch(error => {\r\n                console.log(\"error in deleting product\", error);\r\n            })\r\n        } else if (index === 0) {\r\n            db.collection(\"products\").doc(idOfProduct).update({\r\n                markedAsSold: !soldOrNot\r\n            }, { merge: true }).then(response => {\r\n                console.log(\"Marked as sold field updated\");\r\n                setStatusOfItemMarkedAsSold(!statusOfItemMarkedAsSold)\r\n            }).catch(error => {\r\n                console.log(\"Error in marking field as Updated\", error);\r\n            })\r\n        } else if (index === 1) {\r\n            setopenDialog(true)\r\n            getDateForFormFromFB()\r\n        }\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // everything borrwed from different file\r\n    const [stateAfterSubmitClick, setStateAfterSubmitClick] = useState(false)\r\n    const [nameofProduct, setnameofProduct] = useState(\"\")\r\n    const [producttype, setproducttype] = React.useState('');\r\n    const [productCondition, setproductCondition] = useState(\"\")\r\n    const [productPrice, setproductPrice] = useState(\"\")\r\n    const [productDescription, setproductDescription] = useState(\"\")\r\n    const [errorMessgae, seterrorMessgae] = useState(false)\r\n    const [paymentOptions, setpaymentOptions] = useState([])\r\n    const [openDialog, setopenDialog] = useState(false)\r\n    const handleCloseDialog = () => {\r\n        setopenDialog(false);\r\n        seterrorMessgae(false)\r\n        setpaymentOptions([])\r\n    };\r\n\r\n    const { id } = useParams()\r\n    const getDateForFormFromFB = () => {\r\n        db.collection(\"products\").doc(id).get().then(snapshot => {\r\n            const data = snapshot.data()\r\n            setnameofProduct(data.name)\r\n            setproducttype(data.category)\r\n            setproductCondition(data.productDetails)\r\n            setproductDescription(data.productDescription)\r\n            setproductPrice(data.price)\r\n            setpaymentOptions(data.paymentOptions)\r\n        })\r\n    }\r\n\r\n    const editFormAndSendToFirebase = (e) => {\r\n        setStateAfterSubmitClick(true)\r\n        db.collection(\"products\").doc(id).update({\r\n            date: new Date(),\r\n            name: nameofProduct.slice(0, 60),\r\n            price: productPrice,\r\n            category: producttype,\r\n            productDetails: productCondition,\r\n            productDescription: productDescription.slice(0, 250),\r\n            paymentOptions: paymentOptions,\r\n            uid: user.uid\r\n        }).then(res => {\r\n            console.log(\"product details updated\")\r\n            setopenDialog(false)\r\n            setproductPrice(null)\r\n            setProductEditedInMArkSoldComponent(!productEditedInMArkSoldComponent)\r\n            setStateAfterSubmitClick(false)\r\n        }).catch(error => console.log(\"error while uploading product, \", error))\r\n    }\r\n\r\n\r\n    // use effect hook\r\n    // checking user state\r\n\r\n    // useEffect(() => {\r\n    //     firebase.auth().onAuthStateChanged(userstate => {\r\n    //         if (userstate) {\r\n    //             setUser(userstate)\r\n    //         } else {\r\n    //             setUser(undefined)\r\n    //         }\r\n    //     })\r\n    //     return () => {\r\n    //     }\r\n    // }, [])\r\n\r\n    return (\r\n        <div>\r\n            {user?.email === emailOfProductOwner && <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            aria-controls={open ? 'split-button-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            onClick={handleToggle}\r\n                        >\r\n                            <ArrowDropUpIcon />\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                }}\r\n                            >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleClose}>\r\n                                        <MenuList id=\"split-button-menu\">\r\n                                            {options.map((option, index) => (\r\n                                                <MenuItem\r\n                                                    key={option}\r\n                                                    // disabled={index === 2}\r\n                                                    selected={index === selectedIndex}\r\n                                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                >\r\n                                                    {option}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            <div>\r\n                <Dialog open={openDialog} onClose={handleCloseDialog} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                    <DialogContent>\r\n                        {!errorMessgae && <DialogContentText >\r\n                            Please fill in the details and submit.\r\n                        </DialogContentText>}\r\n                        {errorMessgae && <DialogContentText style={{ color: \"red\" }}>\r\n                            Please fill in the required.\r\n                        </DialogContentText>}\r\n                        <TextField\r\n                            autoFocus\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Product name\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={nameofProduct}\r\n                            placeholder=\"Big black Ikea Drawer\"\r\n                            onChange={e => setnameofProduct(e.target.value)}\r\n                        />\r\n                        <FormControl className={classes.formControl} style={{ margin: 0 }} >\r\n                            <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={producttype}\r\n                                onChange={e => setproducttype(e.target.value)}\r\n                            >\r\n                                <MenuItem value={\"Automotive, Motorcycle & Industrial\"}>Automotive, Motorcycle & Industrial</MenuItem>\r\n                                <MenuItem value={\"Furniture\"}>Furniture</MenuItem>\r\n                                <MenuItem value={\"Apparel, Shoes & Watches\"}>Apparel, Shoes & Watches</MenuItem>\r\n                                <MenuItem value={\"Apparel, Shoes & Watches\"}>Beauty & Health</MenuItem>\r\n                                <MenuItem value={\"Books & Audible\"}>Books & Audible</MenuItem>\r\n                                <MenuItem value={\"Electronics & Computers\"}>Electronics & Computers</MenuItem>\r\n                                <MenuItem value={\"Grocery/Food\"}>Grocery/Food</MenuItem>\r\n                                <MenuItem value={\"Home, Garden, Pets & DIY\"}>Home, Garden, Pets & DIY</MenuItem>\r\n                                <MenuItem value={\"Movies, TV, Music & Games\"}>Movies, TV, Music & Games</MenuItem>\r\n                                <MenuItem value={\"Other\"}>Other</MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br></br>\r\n                        <FormControl className={classes.formControl} style={{ margin: 0 }}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Condition</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={productCondition}\r\n                                onChange={e => setproductCondition(e.target.value)}\r\n                            >\r\n                                <MenuItem value={\"New\"}>New</MenuItem>\r\n                                <MenuItem value={\"Used only once\"}>Used only once</MenuItem>\r\n                                <MenuItem value={\"Used and all parts fine\"}>Used and all parts fine</MenuItem>\r\n                                <MenuItem value={\"Used but few parts not working\"}>Used but few parts not working</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br></br>\r\n                        <FormControl className={classes.formControl} style={{ margin: 0 }}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Payment</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={paymentOptions}\r\n                                onChange={e => setpaymentOptions(e.target.value)}\r\n                            >\r\n                                <MenuItem value={\"Cash\"}>Cash</MenuItem>\r\n                                <MenuItem value={\"Sparkasse\"}>Sparkasse</MenuItem>\r\n                                <MenuItem value={\"Paypal\"}>Paypal</MenuItem>\r\n                                <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Description\"\r\n                            type=\"text\"\r\n                            multiline\r\n                            rows={3}\r\n                            fullWidth\r\n                            value={productDescription}\r\n                            onChange={e => setproductDescription(e.target.value)}\r\n                        />\r\n                        <div id=\"price__icon\">\r\n                            <EuroIcon id=\"price__icon__euro\" />\r\n                            <TextField\r\n\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"&nbsp; &nbsp; &nbsp; Price\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                value={productPrice}\r\n                                onChange={e => setproductPrice(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={e => handleCloseDialog(e)} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        {!stateAfterSubmitClick && <Button onClick={e => editFormAndSendToFirebase(e)} color=\"primary\"\r\n                            disabled={!nameofProduct || !nameofProduct || !producttype || !productCondition || !productPrice}\r\n                        >\r\n                            Submit\r\n                        </Button>}\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useParams } from 'react-router-dom';\r\nimport { db } from '../../Firebase/Firebase';\r\nimport { Avatar, CardMedia } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport firebase from \"firebase\"\r\nimport SplitButton from \"./MarkSoldDeleteEditOptionsComponent\"\r\nimport { userContext } from \"../ContextComponent\"\r\n\r\nimport './ClassifiedProductView.css';\r\n\r\nconst ClassifiedProductView = ({ state }) => {\r\n    const { id } = useParams();\r\n    const [productDataFromFirebase, setproductDataFromFirebase] = useState([])\r\n    const [statusOfItemMarkedAsSold, setStatusOfItemMarkedAsSold] = useState(false) //\r\n    const [productEditedInMArkSoldComponent, setProductEditedInMArkSoldComponent] = useState(false)\r\n    useEffect(() => {\r\n        // firebase analytics\r\n        firebase.analytics().logEvent(\"User is in Main Classified shop Component\")\r\n        // getting document from store and storage\r\n        var docRef = db.collection(\"products\").doc(`${id}`);\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                setproductDataFromFirebase(doc.data())\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n        // checking for auth state\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [id, statusOfItemMarkedAsSold, productEditedInMArkSoldComponent])\r\n\r\n    // new image for product\r\n    const [imageIndex, setImageIndex] = useState(0)\r\n    const setNewImage = (i) => {\r\n        setImageIndex(i)\r\n    }\r\n\r\n    return (\r\n        <userContext.Provider value={{ statusOfItemMarkedAsSold, setStatusOfItemMarkedAsSold, productEditedInMArkSoldComponent, setProductEditedInMArkSoldComponent }}>\r\n            <div style={{ marginTop: \"85px\" }}>\r\n\r\n                {productDataFromFirebase?.id ? <div>\r\n                    <div id=\"Edit__options\">\r\n                        <SplitButton emailOfProductOwner={productDataFromFirebase?.userEmail}\r\n                            idOfProduct={productDataFromFirebase?.id} soldOrNot={productDataFromFirebase?.markedAsSold} user={state} />\r\n                    </div>\r\n                    {/* id=\"testinLocalCSSusingId__inProductview\" */}\r\n                    <div className=\"div__main__grid__productview  \" >\r\n                        <div className=\"productViewMain\" id=\"testinLocalCSSusingId__inProductview\">\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6} className=\"GiveWidth\" >\r\n                                    {/* imageURL is an array of images */}\r\n                                    {console.log(productDataFromFirebase.imageURL)}\r\n                                    { }\r\n                                    {productDataFromFirebase.imageURL && <><CardMedia\r\n                                        className=\"image__product GiveWidth\"\r\n                                        image={productDataFromFirebase.imageURL.length > 0 ? productDataFromFirebase.imageURL[imageIndex] : \"https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg\"}\r\n                                        title=\"Paella dish\"\r\n                                    />{productDataFromFirebase?.markedAsSold && <p className=\"alreadySold\">Already Sold.</p>}</>}\r\n                                    <div className=\"product__image__grid\">\r\n                                        {productDataFromFirebase.imageURL.map((url, i) => (\r\n                                            < img src={url} alt=\"\" onClick={e => setNewImage(i)} key={i} />\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                                    <div className=\"secondDivInGrid GiveWidth alignCenterForSecondGridwhihhchisInforGrid\">\r\n                                        <div className=\"tophead\">\r\n                                            <Grid container id=\"name__avatar__div\" spacing={1} >\r\n                                                <Grid item sm={4} md={3} lg={4} >\r\n                                                    <h2 className=\"productViewDetailsFont\" style={{ textTransform: \"capitalize\" }} >{productDataFromFirebase?.name}</h2>\r\n                                                    <span className=\"prodPricedet\" >{\"€\" + productDataFromFirebase?.price}</span>\r\n                                                </Grid>\r\n                                                <Grid item sm={8} md={9} lg={8} className=\"avatarContainer leftAuto\">\r\n                                                    <Avatar aria-label=\"recipe\">\r\n                                                        {productDataFromFirebase?.userEmail?.slice(0, 1).toUpperCase()}\r\n                                                    </Avatar>\r\n                                                    <div className=\"avatarContainer__div\">\r\n                                                        <h4 style={{ color: \"#06201b\" }}>owner <span style={{ fontSize: \"18px\" }} >📧</span></h4>\r\n                                                        <a href={`mailto:${productDataFromFirebase.userEmail}`} > <h4><b style={{ color: \"#004180\" }}>{productDataFromFirebase?.userEmail}</b><sub>{productDataFromFirebase?.userEmailVerified}</sub></h4></a>\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"productDetails\">\r\n                                            <h2 className=\"productViewDetailsh2\">Product Details:</h2>\r\n                                            <div className=\"productViewDetails\">\r\n                                                {productDataFromFirebase?.date && <h4> Posted on: {productDataFromFirebase?.date.toDate().toLocaleString()} </h4>}\r\n                                                {productDataFromFirebase?.userDisplayName && <h4> Posted by: {productDataFromFirebase?.userDisplayName} </h4>}\r\n                                                {productDataFromFirebase?.category && <h4> Category: {productDataFromFirebase?.category} </h4>}\r\n                                                {productDataFromFirebase?.productDetails && <h4> Condition: {productDataFromFirebase?.productDetails} </h4>}\r\n                                                {productDataFromFirebase?.category && <h4> Product: {productDataFromFirebase?.category} </h4>}\r\n                                                {productDataFromFirebase?.whatsAppNo && <h4> whatsAppNo: <a href={`tel:${productDataFromFirebase?.whatsAppNo}`} style={{ fontWeight: \"500\", color: \"#e12165\" }} > {productDataFromFirebase?.whatsAppNo} </a> </h4>}\r\n                                                <div className=\"pay__div\" >\r\n                                                    <h4>Pay🤑:&nbsp;&nbsp; </h4>\r\n                                                    <div className=\"Payment\">\r\n                                                        {productDataFromFirebase?.paymentOptions?.map((option, i) => (\r\n                                                            <span key={i} >{option}</span>\r\n                                                        ))}\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <br></br>\r\n                                        {productDataFromFirebase?.productDescription ? <div>\r\n                                            <p className=\"endtext\">Description: </p>\r\n                                            <h3 className=\"endtext\" style={{ marginLeft: \"2rem\" }} >{productDataFromFirebase?.productDescription}</h3>\r\n                                        </div> : <p className=\"endtext\">No description Available 😿.</p>}\r\n                                        <br></br> <br></br>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> : <div className=\"\"  ><Skeleton className=\"skeleton\" variant=\"rect\" width=\"80vw\" height=\"60vh\" /></div>\r\n                }\r\n\r\n            </div>\r\n        </userContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default ClassifiedProductView\r\n","import React from \"react\";\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport \"./FooterComponent.css\";\r\nconst FooterComponent = () => {\r\n    return (\r\n        <div className=\"footer\" id=\"footer__end\">\r\n            <div className=\"footer-socailLink\">\r\n                <a href=\"https://www.instagram.com/infintyuj/\" className=\"link__newsDecoration\" >\r\n                    <div className=\"footer__icon12\" >\r\n                        {/* <p className=\"footer__left\" style={{ marginRight: \"5px\" }}>Infintyuj</p> */}\r\n                        {/* <IconButton > */}\r\n                        <InstagramIcon color=\"error\" />\r\n                        {/* </IconButton> */}\r\n                    </div>\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/khadkauj/\" className=\"link__newsDecoration\" >\r\n                    <div className=\"footer__icon12\" >\r\n                        {/* <p className=\"footer__left\" style={{ marginRight: \"5px\" }}>Infintyuj</p> */}\r\n                        {/* <IconButton > */}\r\n                        <LinkedInIcon color=\"error\" />\r\n                        {/* </IconButton> */}\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <p className=\"footer_end\">Infinty ist Infinite.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FooterComponent;","import { Avatar, IconButton, ListItemAvatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { db } from \"../../Firebase/Firebase\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport firebase from \"firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SnackBarComponent from \"../SnackBar/SnackBarComponent\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderOutlined from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport \"./AnswerComponent.css\";\r\n\r\nconst AnswerComponent = ({ state }) => {\r\n\r\n    const [user, setUser] = useState(state);\r\n    const [questionAnswerFromFB, setquestionAnswerFromFB] = useState(undefined);\r\n    const [answerListsOfQuestions, setanswerListsOfQuestions] = useState(undefined);\r\n    const [stateAfterAnswerSubmit, setstateAfterAnswerSubmit] = useState(false);\r\n    const [stateAfterQuestionSubmit, setstateAfterQuestionSubmit] = useState(false)\r\n    const [stateAfterAnswerDelete, setStateAfterAnswerDelete] = useState(false)\r\n    const [updateAfterSendingLike, setupdateAfterSendingLike] = useState(false)\r\n    const [stateAfterVote, setstateAfterVote] = useState(false);\r\n    const [openSnackbarProps, setopenSnackbarProps] = useState(false);\r\n    const [seeMoreState, setSeeMoreState] = useState(false); //too see all answer when clicke on see more\r\n    const [checkedBox, setCheckedBox] = React.useState(false); //checkbox\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [stateAfterVotingQuestion, setStateAfterVotingQuestion] = useState(false)\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        firebase.analytics().logEvent(\"User is in Answer Component\")\r\n        // the below  function to retreive questions\r\n        db.collection(\"questions\")\r\n            .doc(id)\r\n            .onSnapshot((doc) => {\r\n                setquestionAnswerFromFB(doc?.data())\r\n                setquestionId(doc?.id)\r\n                setquestion(doc?.data()?.question)\r\n\r\n            })\r\n        // .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n\r\n        // the below function to get  inner answer collection in question collection\r\n        db.collection(\"questions\")\r\n            .doc(id)\r\n            .collection(\"answersList\")\r\n            .orderBy(\"date\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                setanswerListsOfQuestions(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        key: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                );\r\n            })\r\n        // .catch((error) => console.log(\"error in fetching data from FB, \", error));\r\n\r\n        // checking if user is logged in\r\n        // firebase.auth().onAuthStateChanged((userState) => {\r\n        //     if (userState) {\r\n        //         setUser(userState);\r\n        //     } else {\r\n        //         setUser(undefined);\r\n        //     }\r\n        // });\r\n        return () => { };\r\n    }, [\r\n        // stateAfterAnswerSubmit, stateAfterVote,\r\n        // stateAfterQuestionSubmit, stateAfterAnswerDelete,\r\n        // updateAfterSendingLike, stateAfterVotingQuestion,\r\n        id\r\n    ]);\r\n\r\n    // all setup for Form Dialog Box\r\n    const [open, setOpen] = React.useState(false);\r\n    const [answer, setanswer] = useState(undefined);\r\n    const handleClickOpen = () => {\r\n        setanswer(undefined);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setanswer(undefined);\r\n    };\r\n\r\n    // send form to firebase\r\n    const sendAnswerToFirebase = () => {\r\n        if (user) {\r\n            const idInnerCollection = uuidv4();\r\n            // updating answers\r\n            db.collection(\"questions\")\r\n                .doc(id)\r\n                .collection(\"answersList\")\r\n                .doc(idInnerCollection)\r\n                .set({\r\n                    answer: answer,\r\n                    date: new Date(),\r\n                    id: idInnerCollection,\r\n                    vote: 0,\r\n                    replies: [\"No replies\"],\r\n                    peopleWhoDownVoted: [\"none\"],\r\n                    peopleWhoUpVoted: [\"None\"],\r\n                    emailUsedToAnswerSavedForSecurityPurpose: user?.email,\r\n                    answeredBy: checkedBox ? \"\" : user?.email,\r\n                    like: 0,\r\n                    peopleWhoLiked: [\"ds@gmial.com\", \"djs.com\"],\r\n                    disLike: 0,\r\n                    userEmailVerified: user.emailVerified,\r\n                    userDisplayName: user?.displayName,\r\n                    uid: user.uid\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"Answer sent to firebase\");\r\n                    setOpen(false);\r\n                    setanswer(undefined);\r\n                    setstateAfterAnswerSubmit(!stateAfterAnswerSubmit);\r\n                })\r\n                .catch((error) =>\r\n                    console.log(\"Error  while sending answer to firebase\")\r\n                );\r\n            // updating answered field for the answer\r\n            db.collection(\"questions\")\r\n                .doc(id)\r\n                .update({\r\n                    answered: true,\r\n                })\r\n                .then((data) => {\r\n                    console.log(\"Answered filed updated\");\r\n                })\r\n                .catch((error) =>\r\n                    console.log(\"Error while Answered filed updated\")\r\n                );\r\n        } else {\r\n            console.log(\"PLease log in\");\r\n            setopenSnackbarProps(true);\r\n            setTimeout(() => {\r\n                setopenSnackbarProps(false);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    // adding love to answer // ading like/dis-like in each products\r\n    // like-dislike answers\r\n    const addLikeToFirebase = (data, numToAdd) => {\r\n        if (user) {\r\n            db.collection(\"questions\").doc(questionId).collection(\"answersList\").doc(data?.id).get().then(doc => {\r\n                if (!doc.data().peopleWhoLiked?.includes(user?.email)) {\r\n                    db.collection(\"questions\").doc(questionId).collection(\"answersList\").doc(data?.id).update({\r\n                        like: firebase.firestore.FieldValue.increment(1),\r\n                        peopleWhoLiked: firebase.firestore.FieldValue.arrayUnion(user?.email ? user?.email : \"joke\")\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike toFirebase Funciton, \", error))\r\n                } else {\r\n                    db.collection(\"questions\").doc(questionId).collection(\"answersList\").doc(data?.id).update({\r\n                        like: firebase.firestore.FieldValue.increment(-1),\r\n                        peopleWhoLiked: firebase.firestore.FieldValue.arrayRemove(user?.email)\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike in -else statement- toFirebase Funciton, \", error))\r\n                }\r\n            }).catch(error => console.log(\"error in addLiketoFirebase Function, \", error))\r\n            setupdateAfterSendingLike(!updateAfterSendingLike)\r\n        }\r\n        else {\r\n            console.log(\"User not found while trying to send Like\");\r\n            // setpopUpText(\"Please Login.\")\r\n            // handleClickSnackbar()\r\n            // history.push(\"/Login\")\r\n        }\r\n\r\n    }\r\n\r\n    // Edit answer -- many componets here are borowwwed from AskMeAquestionComponent\r\n    // all setup for Form Dialog Box\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const handleEditAsnwer = () => {\r\n        if (user?.email === questionAnswerFromFB?.questionPostedby) {\r\n            setOpenDialog(true);\r\n        }\r\n    };\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setquestion(\"\")\r\n    };\r\n    // send question to firebase\r\n    const [noDoubleSUbmitCLick, setnoDoubleSUbmitCLick] = useState(false)\r\n    const [useSnackBarState, setUseSnackBarState] = useState(false)\r\n    const [question, setquestion] = useState(\"\")\r\n    const sendQuestionToFirebase = () => {\r\n        // setstateAfterQuestionSubmit(true)\r\n        if (user?.email === questionAnswerFromFB?.questionPostedby) {\r\n            setnoDoubleSUbmitCLick(!noDoubleSUbmitCLick)\r\n            db.collection(\"questions\").doc(questionId).update({\r\n                question: question,\r\n                date: new Date(),\r\n                uid: user.uid\r\n            }).then(doc => {\r\n                console.log(\"snap while sending question to FB\", doc)\r\n                // setStateForHomePageTwoNestedCompToSync(!stateForHomePageTwoNestedCompToSync)\r\n                setOpenDialog(false)\r\n                setquestion(\"\")\r\n                setstateAfterQuestionSubmit(true)\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"Error while sending question to FB\", error)\r\n                    setOpen(false)\r\n                })\r\n        } else {\r\n            setopenSnackbarProps(true);\r\n            setTimeout(() => {\r\n                setopenSnackbarProps(false);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    // delete answer\r\n    const deleteAnswer = (idToDel, emailofAnswer) => {\r\n        if (user?.email === emailofAnswer) {\r\n            db.collection(\"questions\")\r\n                .doc(id)\r\n                .collection(\"answersList\")\r\n                .doc(idToDel)\r\n                .delete()\r\n                .then((snapshot) => {\r\n                    console.log(\"Delete your reply\");\r\n                    setStateAfterAnswerDelete(!stateAfterAnswerDelete)\r\n                })\r\n                .catch((error) => console.log(\"Unable to delete reply \", error));\r\n        }\r\n\r\n    }\r\n    // vote question\r\n    const voteQuestion = (e) => {\r\n        if (user) {\r\n            db.collection(\"questions\").doc(questionId).get().then(doc => {\r\n                if (!doc.data().peopleWhoVoted?.includes(user?.email)) {\r\n                    db.collection(\"questions\").doc(questionId).update({\r\n                        vote: firebase.firestore.FieldValue.increment(1),\r\n                        peopleWhoVoted: firebase.firestore.FieldValue.arrayUnion(user?.email ? user?.email : \"joke\")\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike toFirebase Funciton, \", error))\r\n                } else {\r\n                    db.collection(\"questions\").doc(questionId).update({\r\n                        vote: firebase.firestore.FieldValue.increment(-1),\r\n                        peopleWhoVoted: firebase.firestore.FieldValue.arrayRemove(user?.email)\r\n                    }, { merge: true }).catch(error => console.log(\"error in updating insideLike in -else statement- toFirebase Funciton, \", error))\r\n                }\r\n            })\r\n                .then(nthg => setStateAfterVotingQuestion(!stateAfterVotingQuestion))\r\n                .catch(error => console.log(\"error in addLiketoFirebase Function, \", error))\r\n\r\n        } else {\r\n            console.log(\"User not found while trying to send Like\");\r\n            setopenSnackbarProps(true);\r\n            setTimeout(() => {\r\n                setopenSnackbarProps(false);\r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"answerComponetn__topMainDiv\">\r\n            {questionAnswerFromFB ? (\r\n                <div id=\"QA__main\">\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} sm={12} md={4} lg={4}>\r\n                            <h3>{questionAnswerFromFB?.question}</h3>\r\n                            <div className=\"icons__QA\">\r\n                                <IconButton aria-label=\"share\" onClick={e => handleClickOpen(e)}>\r\n                                    <div style={{ display: \"flex\", flexDirection: \"column\" }} >\r\n                                        <BorderColorIcon fontSize=\"large\" /> <span style={{ fontSize: \"12px\" }}>Answer</span>\r\n                                    </div>\r\n                                </IconButton>\r\n                                {questionAnswerFromFB.peopleWhoVoted?.includes(user?.email) ?\r\n                                    <IconButton aria-label=\"share\" onClick={e => voteQuestion(1, -1)}>\r\n                                        <div style={{ display: \"flex\", flexDirection: \"column\" }} >\r\n                                            <FavoriteIcon fontSize=\"large\" /> <span style={{ fontSize: \"12px\" }}>{questionAnswerFromFB.vote} Votes</span>\r\n                                        </div>\r\n                                    </IconButton> :\r\n                                    <IconButton aria-label=\"share\" onClick={e => voteQuestion(1, -1)} >\r\n                                        <div style={{ display: \"flex\", flexDirection: \"column\" }} >\r\n                                            <FavoriteBorderOutlined fontSize=\"large\" /> <span style={{ fontSize: \"12px\" }}>{questionAnswerFromFB.vote} Votes</span>\r\n                                        </div>\r\n                                    </IconButton>}\r\n\r\n                                {questionAnswerFromFB.questionPostedby === user?.email &&\r\n                                    <IconButton aria-label=\"share\" onClick={e => handleEditAsnwer(e)} >\r\n                                        <div style={{ display: \"flex\", flexDirection: \"column\" }} >\r\n                                            <MoreHorizIcon fontSize=\"large\" /><span style={{ fontSize: \"12px\" }}>Edit</span>\r\n                                        </div>\r\n                                    </IconButton>\r\n                                }\r\n\r\n                            </div>\r\n                            <p id=\"question__Tag\">#{questionAnswerFromFB.tag}</p>\r\n                            <div className=\"dark_greyBox\">\r\n                                <span className=\"noOfAns\">\r\n                                    {answerListsOfQuestions?.length\r\n                                        ? answerListsOfQuestions?.length + \" Answers\"\r\n                                        : \"Be the first to reply.🖊\"}\r\n                                </span>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        {answerListsOfQuestions?.length > 0 ?\r\n                            <Grid item xs={12} sm={12} md={8} lg={8}>\r\n                                {answerListsOfQuestions?.map((docData, i) => (\r\n                                    <div className=\"qa__mainDiv\" key={i}>\r\n                                        <div className=\"avatarAndids\">\r\n                                            <ListItemAvatar>\r\n                                                <Avatar alt=\"Profile Picture\" src={\"\"} />\r\n                                            </ListItemAvatar>\r\n                                            <div className=\"avatarAndids__innner\">\r\n                                                <strong>\r\n                                                    {docData?.data?.answeredBy\r\n                                                        ? docData?.data?.answeredBy\r\n                                                        : \"Anonymous\"}\r\n                                                </strong>\r\n                                                <span>\r\n                                                    {docData?.data?.date.toDate().toLocaleString()}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"inner__answer\">\r\n                                            {docData?.data?.answer &&\r\n                                                docData?.data?.answer.length < 200 && (\r\n                                                    <p>{docData?.data?.answer.slice(0, 200)} </p>\r\n                                                )}\r\n                                        </div>\r\n\r\n\r\n                                        {!seeMoreState && (\r\n                                            <div className=\"inner__answer\">\r\n                                                {docData?.data?.answer &&\r\n                                                    docData?.data?.answer.length >= 200 && (\r\n                                                        <div className=\"answer__seeMore\">\r\n                                                            <p>{docData?.data?.answer.slice(0, 200) + \"...\"}</p>{\" \"}\r\n                                                            <span\r\n                                                                style={{ cursor: \"pointer\" }}\r\n                                                                className=\"seeMoreAnswer__span\"\r\n                                                                onClick={(e) => setSeeMoreState(!seeMoreState)}\r\n                                                            >\r\n                                                                see more\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    )}\r\n\r\n                                            </div>\r\n                                        )}\r\n                                        {seeMoreState && (\r\n                                            <div className=\"inner__answer\">\r\n                                                {docData?.data?.answer && docData?.data?.answer.length >= 200 && (\r\n                                                    <div div className=\"answer__seeMore\">\r\n                                                        <p>{docData?.data?.answer} </p>{\" \"}\r\n                                                        <span\r\n                                                            style={{ cursor: \"pointer\" }}\r\n                                                            className=\"seeMoreAnswer__span\"\r\n                                                            onClick={(e) => setSeeMoreState(!seeMoreState)}\r\n                                                        >\r\n                                                            see less\r\n                                                        </span>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <div className=\"qa__footer\">\r\n                                            <div id=\"oneIcon__collection\">\r\n\r\n                                                <CardActions disableSpacing>\r\n                                                    {docData?.data.peopleWhoLiked?.includes(user?.email) && <IconButton onClick={e => addLikeToFirebase(docData?.data, -1)} aria-label=\"add to favorites\" style={{ color: \"#ed4956\" }}>\r\n                                                        <FavoriteIcon /><p className=\"like\">{docData?.data?.like + \" likes\"}</p>\r\n                                                    </IconButton>}\r\n                                                    {!docData?.data?.peopleWhoLiked?.includes(user?.email) && <IconButton aria-label=\"add to favorites\" onClick={e => addLikeToFirebase(docData?.data, 1)}>\r\n                                                        <FavoriteBorderOutlined /><p className=\"like\">{docData?.data?.like + \" likes\"}</p>\r\n                                                    </IconButton>}\r\n                                                    {/* <IconButton aria-label=\"add to favorites\">\r\n                                                                <FavoriteBorderOutlined onClick={e => addLikeToFirebase(item?.data)} />\r\n                                                            </IconButton> */}\r\n\r\n                                                </CardActions>\r\n                                            </div>\r\n                                            <div>\r\n                                                {user?.email === docData.data.emailUsedToAnswerSavedForSecurityPurpose &&\r\n                                                    <Button size=\"small\" color=\"secondary\" onClick={e => deleteAnswer(docData?.data?.id, docData?.data?.emailUsedToAnswerSavedForSecurityPurpose)}  >\r\n                                                        Delete.\r\n                                                    </Button>\r\n                                                }\r\n                                                <Button size=\"small\" color=\"secondary\" disabled={true} >\r\n                                                    Reply.\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"dark_greyBox\"></div>\r\n                                    </div>\r\n                                ))}\r\n                            </Grid> : <p className=\"no__answers\">No Answers Available at the moment.</p>}\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <div className=\"\">\r\n                    <Skeleton className=\"skeleton\" variant=\"rect\" width=\"80vw\" height=\"30vh\" />\r\n                </div>\r\n            )}\r\n\r\n            {/* Form  Popup for a Question */}\r\n            <div>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    {/* <DialogTitle id=\"form-dialog-title\">Ask me a question and I will answer it in a thread below.</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText>Answer it only if you know.</DialogContentText>\r\n                        <TextField\r\n                            multiline\r\n                            rows={7}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Answer =>\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={answer}\r\n                            onChange={(e) => setanswer(e.target.value)}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={checkedBox} onChange={e => setCheckedBox(!checkedBox)} name=\"checkedA\" />}\r\n                            label=\"Anonymous\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        {\r\n                            <Button\r\n                                onClick={sendAnswerToFirebase}\r\n                                color=\"primary\"\r\n                                disabled={!answer}\r\n                                type=\"submit\"\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            <SnackBarComponent open={openSnackbarProps} />\r\n            {/* Form  Popup for a Question */}\r\n            <div>\r\n                <Dialog open={openDialog} onClose={e => handleCloseDialog()} aria-labelledby=\"form-dialog-title\">\r\n                    {/* <DialogTitle id=\"form-dialog-title\">Ask me a question and I will answer it in a thread below.</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ask me anything.\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            multiline\r\n                            rows={7}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Question?(20 to 200 words)\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={question}\r\n                            onChange={e => setquestion(e.target.value)}\r\n                            inputProps={{ maxLength: 200, minLength: 100, required: true, placeholder: \"Put your question here.\" }}\r\n                        />\r\n                    </DialogContent>\r\n                    {/* {ErrorForMaxCharInput && <p>No more than 200 chars allowed</p>} */}\r\n                    <DialogActions>\r\n                        <Button onClick={e => handleCloseDialog()} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={e => sendQuestionToFirebase(e)} color=\"primary\" disabled={question?.length < 20 || user?.email !== questionAnswerFromFB?.questionPostedby}  >\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnswerComponent;\r\n","import React, { useState } from 'react'\r\nimport axios from \"axios\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"./StalkComponent.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\nconst StalkComponent = () => {\r\n    const classes = useStyles();\r\n\r\n    const [userName, setUserName] = useState(\"ukhadka\")\r\n    const [jacobsUserProfile, setJacobsUserProfile] = useState([])\r\n    const [imgURL, setImgURL] = useState(\"\")\r\n    const [errorInFetchingDetails, setErrorInFetchingDetails] = useState(\"\")\r\n    const submitUserName = async (e) => {\r\n        e.preventDefault()\r\n        await axios.get(`https://jacobsapigetallpeopledetails.herokuapp.com/api/${userName}`)\r\n            .then(response => response.data)\r\n            .then(data => {\r\n                setErrorInFetchingDetails(\"\")\r\n                console.log(Object.entries(data))\r\n                setJacobsUserProfile(Object.entries(data))\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error in data , \", error);\r\n                setErrorInFetchingDetails(error)\r\n            })\r\n\r\n\r\n        // await axios.get(`https://jacobsapigetallpeopledetails.herokuapp.com/api/${userName}/image`, {\r\n        //     responseType: 'arraybuffer',\r\n        //     headers: {\r\n        //         'Access-Control-Allow-Origin': \"*\"\r\n        //     }\r\n        // })\r\n        //     .then(response => response)\r\n        //     .then(data => {\r\n        //         console.log(data)\r\n        //         // const ac = URL.createObjectURL(data.data)\r\n        //         // setImgURL(ac)\r\n        //     })\r\n        //     .catch(error => {\r\n        //         console.log(\"error in data , \", error);\r\n        //         setErrorInFetchingDetails(error)\r\n        //     })\r\n    }\r\n\r\n    return (\r\n        <div className=\"stalkMain\">\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"standard-basic\" label=\"username\" value={userName} onChange={e => setUserName(e.target.value)} />\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={e => submitUserName(e)} type=\"Submit\" >\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n            <div style={{ padding: \"10px\" }}>\r\n                <code  >Try putting your userid here. For example, if\r\n                    your email address is u.khadka@jacobs-university.de than than your username is ukhadka.\r\n                    Likewise, ssah for s.sah@jacobs-university.de and ronepal for ro.nepal@jacobs-university.\r\n                    de. Finally, wait for 5 seconds.</code>\r\n            </div>\r\n\r\n            <br /> <br />\r\n            {errorInFetchingDetails && <p className=\"invalid-user\" >Invalid User Id</p>}\r\n            {!errorInFetchingDetails && <div style={{ display: \"grid\", placeItems: \"center\", marginBottom: \"24px\" }}>\r\n                {jacobsUserProfile?.map(object =>\r\n                    <div style={{ display: \"flex\" }} >\r\n                        <code> {object[0] + \"  :   \"} </code> <p> {\"  \" + object[1]} </p>\r\n                    </div>\r\n                )}\r\n            </div>}\r\n\r\n            {/* <img scr={imgURL} alt=\"\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StalkComponent\r\n","import React from 'react'\r\nimport \"./Documentation.css\"\r\n\r\nconst Documentation = () => {\r\n    console.log(\"docume\");\r\n\r\n    return (\r\n        <div className=\"documentation\">\r\n            <b>Documentation:</b>\r\n\r\n            <p>These webApp has mainly three Five components:</p>\r\n            <ul>\r\n                <li>Questions</li>\r\n                <li>Asnwers</li>\r\n                <li>Shop</li>\r\n                <li>Shop-Product View</li>\r\n                <li>LogIn</li>\r\n            </ul>\r\n            {/*  */}\r\n            <br />\r\n            <p> <b>1.</b>  The first Component- Question - has given sections: </p>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/mainpage.jpg'} alt=\"\" />\r\n            </div>\r\n            {/*  */}\r\n            <br />\r\n            <p><b>2.</b> You can click on any questions which will redirect yout ot the second Component- Answer - which has given sections: </p>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/answerComp.jpg'} alt=\"\" />\r\n            </div>\r\n            {/*  */}\r\n            <br />\r\n            <p><b>3.</b> The third Component- Shop - has given sections: </p>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/shopPage.jpg'} alt=\"\" />\r\n            </div>\r\n            {/*  */}\r\n            <br />\r\n            <p><b>4.</b> The fourth Component- Shop- Product: View - has given sections: </p>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/productImage.jpg'} alt=\"\" />\r\n            </div>\r\n\r\n\r\n            {/*  */}\r\n            <br />\r\n            <p><b>5.</b> Furthermore, You can click on either LogIn or Settings Icon to see other options: </p>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/settings.jpg'} alt=\"\" />\r\n            </div>\r\n            {/*  */}\r\n            <br />\r\n            <p><b>6.</b> Finally, You can log in using any of the three listed methods: </p>\r\n            <ul><li>You can sign in using password less method ie. provide your college email address and\r\n                get a link in  your outlook. Then, sign in using the sent link.</li>\r\n                <li>Easy Sign in using Google or Microsoft Auth. Both of these google and outlook\r\n                    authentication might be discontunied in future because of security reasons. </li></ul>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/login.png'} alt=\"\" />\r\n            </div>\r\n\r\n\r\n            {/*  */}\r\n            <br />\r\n            <p><b>7.</b> Finally you can open it in chrome and go to chrom settings and install it: </p>\r\n\r\n            <div className=\"documentation-image\">\r\n                <img src={process.env.PUBLIC_URL + '/install.jpg'} alt=\"\" />\r\n            </div>\r\n\r\n            <br />\r\n            <b>If you have any confusions or feedback or want to collab, please lmk.</b>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Documentation\r\n","import React from 'react'\r\nimport \"./TermsAndCondition.css\"\r\n\r\nconst TermsAndCondition = () => {\r\n    console.log(\"term\");\r\n    return (\r\n        <div className=\"main-terms\">\r\n            <p className=\"terms-head\" > <b>Terms And Condition</b></p><br />\r\n            <p>All the datas which includes questions, answers, store products, votes on all questions,\r\n                answers and products, product pictures, email, username and any other details are stored in\r\n                the Firebase database which are secured by Firebase security rules. We declare that we won’t\r\n                collect or use any of the stored data. Furthermmore, to improve the content, all Create request has to\r\n                be authenticated. Update,and delete request has to be both authenticated and of same user to secure account.\r\n                All Get request are public.\r\n            </p><br />\r\n            <p> If you wish to delete your data, you can email us privately and datas specific to you will be deleted.</p><br />\r\n            <p> We take no responsibility for any\r\n                harm or abuse that might occur here, please use it wisely. Any transactions you might do\r\n                because of products in store is your responsibility, we wouldn’t be responsible for anything.\r\n                We’re just a mediator.</p> <br />\r\n            <p> Anyone who uses hate speech or tries to use this platform to abuse\r\n                someone would be blocked. The  purpose is to create a forum for students of Jacobs University.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsAndCondition\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tHashRouter,\r\n} from \"react-router-dom\";\r\nimport HomePageComponent from \"./Components/HomePageComponent\";\r\nimport ClassifiedHomePageComponent from \"./Components/Classified/ClassifiedHomePageComponent\";\r\nimport Login from \"./Components/Login And Logout/Login\";\r\nimport HeaderComponent from \"./Components/HeaderComponent\";\r\nimport ClassifiedProductView from \"./Components/Classified/ClassifiedProductView\";\r\nimport FooterComponent from \"./Components/Footer/FooterComponent\";\r\nimport AnswerComponent from \"./Components/AskQuestion/AnswerComponent\";\r\nimport firebase from \"firebase\";\r\nimport \"./App.css\";\r\nimport StalkComponent from \"./Components/Stalk/StalkComponent\";\r\nimport Documentation from \"./Components/Miscellaneous/Documentation\";\r\nimport TermsAndCondition from \"./Components/Miscellaneous/TermsAndCondition\";\r\n\r\nfunction App() {\r\n\r\n\tconst [state, setState] = useState({})\r\n\tuseEffect(() => {\r\n\t\tfirebase.analytics().logEvent(\"User is in App Componen\");\r\n\r\n\t\tconsole.log(\"useeffect app.js loaded\");\r\n\t\tconst emailVerification = async () => {\r\n\t\t\t// Confirm the link is a sign-in with email link.\r\n\t\t\tif (firebase.auth().isSignInWithEmailLink(window.location.href)) {\r\n\t\t\t\tconsole.log(\"runnin\");\r\n\t\t\t\t// Additional state parameters can also be passed via URL.\r\n\t\t\t\t// This can be used to continue the user's intended action before triggering\r\n\t\t\t\t// the sign-in operation.\r\n\t\t\t\t// Get the email if available. This should be available if the user completes\r\n\t\t\t\t// the flow on the same device where they started it.\r\n\t\t\t\tvar email = localStorage.getItem('emailForSignIn');\r\n\t\t\t\tconsole.log(email);\r\n\t\t\t\t// if (!email) {\r\n\r\n\t\t\t\t// \temail = window.prompt('Please provide your email for confirmation');\r\n\t\t\t\t// }\r\n\t\t\t\t// The client SDK will parse the code from the link for you.\r\n\t\t\t\tawait firebase.auth().signInWithEmailLink(email, window.location.href)\r\n\t\t\t\t\t.then((result) => {\r\n\t\t\t\t\t\tconsole.log(\"runnin2\");\r\n\t\t\t\t\t\t// Clear email from storage.\r\n\t\t\t\t\t\tlocalStorage.removeItem('emailForSignIn');\r\n\t\t\t\t\t\t// You can access the new user via result.user\r\n\t\t\t\t\t\t// Additional user info profile not available via:\r\n\t\t\t\t\t\t// result.additionalUserInfo.profile == null\r\n\t\t\t\t\t\t// You can check if the user is new or existing:\r\n\t\t\t\t\t\t// result.additionalUserInfo.isNewUser\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.log(\"error in email send link verificatio\", error);\r\n\t\t\t\t\t\twindow.prompt(\"The link has expired, please try again later.\")\r\n\t\t\t\t\t\t// Some error occurred, you can inspect the code: error.code\r\n\t\t\t\t\t\t// Common errors could be invalid email and invalid or expired OTPs.\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\temailVerification()\r\n\r\n\t\tfirebase.auth().onAuthStateChanged(userObj => {\r\n\t\t\tconsole.log(\"useeffect app.js auth loaded\");\r\n\t\t\tif (userObj) {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdisplayName: userObj.displayName,\r\n\t\t\t\t\temail: userObj.email,\r\n\t\t\t\t\temailVerified: userObj.emailVerified,\r\n\t\t\t\t\tuid: userObj.uid,\r\n\t\t\t\t\tphotoURL: userObj.photoURL\r\n\t\t\t\t})\r\n\t\t\t\t// user = {\r\n\t\t\t\t// \tdisplayName: userObj.displayName,\r\n\t\t\t\t// \temail: userObj.email,\r\n\t\t\t\t// \temailVerified: userObj.emailVerified,\r\n\t\t\t\t// \tuid: userObj.uid,\r\n\t\t\t\t// \tphotoURL: userObj.photoURL\r\n\t\t\t\t// }\r\n\t\t\t\t// console.log(\"user in app,js useeffect\", user);\r\n\t\t\t} else {\r\n\t\t\t\tsetState(undefined)\r\n\t\t\t\tconsole.log(\"no user in app,js useeffect userObj\", userObj);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}, []);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div id=\"OutsideApp\">\r\n\t\t\t<Router>\r\n\t\t\t\t{/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n\r\n\t\t\t\t<HashRouter>\r\n\t\t\t\t\t<HeaderComponent userStatus={state} />\r\n\t\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t\t<Route exact path=\"/Classified\">\r\n\t\t\t\t\t\t\t<ClassifiedHomePageComponent userDetailsFirebase={state} />\r\n\t\t\t\t\t\t\t<FooterComponent />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/Login\">\r\n\t\t\t\t\t\t\t<Login state={state} />\r\n\t\t\t\t\t\t\t<FooterComponent />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t{/* <Route exact path=\"/SignUp\">\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t\t<FooterComponent />\r\n\t\t\t\t\t\t</Route> */}\r\n\t\t\t\t\t\t<Route exact path=\"/Classified/Products/:id\">\r\n\t\t\t\t\t\t\t<ClassifiedProductView state={state} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/Answers/:id\">\r\n\t\t\t\t\t\t\t<AnswerComponent state={state} />\r\n\t\t\t\t\t\t\t<FooterComponent />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/Stalk\">\r\n\t\t\t\t\t\t\t<StalkComponent />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/Documentation\">\r\n\t\t\t\t\t\t\t<Documentation />\r\n\t\t\t\t\t\t\t<FooterComponent />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/TermsAndCondition\">\r\n\t\t\t\t\t\t\t<TermsAndCondition />\r\n\t\t\t\t\t\t\t<FooterComponent />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<HomePageComponent state={state} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</HashRouter>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\n// here counter is a layer\n// such layer are called Slice of the Store\n// such slices are created using createSlice\nexport const userSlice = createSlice({\n  // and the slice has a name called counter\n  name: \"user\",\n  // who has a initial state\n  initialState: {\n    // and initial value\n    // username: null,\n    // photourl: \"\",\n    // email: \"\",\n    // uid: \"\",\n    // emailVerified: \"\",\n    pack: []\n  },\n  // and here we describe the reducer\n  // Reducers are functions that take the current state\n  //  and an action as arguments, and return a new state\n  // result. In other words, (state, action) => newState.\n  // here, increment, decrement and incerementByAmount\n  // are reducer functions\n  reducers: {\n    setUsername: (state, action) => {\n      // state.username = action.payload.username;\n      // state.photourl = action.payload.photourl;\n      // state.email = action.payload.email;\n      // state.uid = action.payload.uid\n      // state.emailVerified = action.payload.emailVerified\n      state.pack = action.payload.pack\n    },\n    logout: (state) => {\n      // state.username = null;\n      // state.photourl = null;\n      // state.email = null;\n      // state.uid = null\n      state.pack = []\n    },\n\n  },\n});\n\n// and we basically export this to counterSlice.actions\nexport const { setUsername, logout } = userSlice.actions;\n\n// \n// export const selectUser = (state) => state.user.username;\n// export const selectPhotourl = (state) => state.user.photourl;\n// export const selectEmail = (state) => state.user.email;\n// export const selectUid = (state) => state.user.uid;\n// export const emailVerified = (state) => state.user.emailVerified\nexport const selectPack = (state) => state.user.pack\n\n\n\n\nexport default userSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n// import counterReducer from '../features/counter/counterSlice';\nimport userReducer from '../features/counter/userSlice';\n\n\n// here configureStore is configuring store for us\nexport default configureStore({\n  // and we are passing it a reducer\n  // and which as a layer called counter that has a reducer counterReducer\n  // you can have many layer\n  // and each layer and has a reducer\n  // such layer are called Slice of the Store\n  // you can have many layer here and all of them are independent to each other\n  reducer: {\n    // counter: counterReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n\r\n/***the code below was from previos */\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}